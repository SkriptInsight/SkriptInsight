{
    "addon": {
        "name": "Skript"
    },
    "types": [
        {
            "id": 3327612,
            "typeName": "long",
            "className": "java.lang.Long",
            "addonName": "Skript",
            "patterns": [
                "int(eger)?s?"
            ]
        },
        {
            "id": -1325958191,
            "typeName": "double",
            "className": "java.lang.Double",
            "addonName": "Skript"
        },
        {
            "id": 97526364,
            "typeName": "float",
            "className": "java.lang.Float",
            "addonName": "Skript"
        },
        {
            "id": 64711720,
            "description": [
                "A boolean is a value that is either true or false. Other accepted names are 'on' and 'yes' for true, and 'off' and 'no' for false."
            ],
            "usage": [
                "true/yes/on or false/no/off"
            ],
            "examples": [
                "set {config.%player%.use mod} to false"
            ],
            "since": "1.0",
            "typeName": "boolean",
            "className": "java.lang.Boolean",
            "addonName": "Skript",
            "patterns": [
                "booleans?"
            ]
        },
        {
            "id": 109413500,
            "typeName": "short",
            "className": "java.lang.Short",
            "addonName": "Skript"
        },
        {
            "id": 3039496,
            "typeName": "byte",
            "className": "java.lang.Byte",
            "addonName": "Skript"
        },
        {
            "id": -891985903,
            "description": [
                "Text is simply text, i.e. a sequence of characters, which can optionally contain expressions which will be replaced with a meaningful representation (e.g. %player% will be replaced with the player's name).",
                "Because scripts are also text, you have to put text into double quotes to tell Skript which part of the line is an effect/expression and which part is the text.",
                "Please read the article on Texts and Variable Names to learn more."
            ],
            "usage": [
                "simple: \"...\"",
                "quotes: \"...\"\"...\"",
                "expressions: \"...%expression%...\"",
                "percent signs: \"...%%...\""
            ],
            "examples": [
                "broadcast \"Hello World!\"",
                "message \"Hello %player%\"",
                "message \"The id of \"\"%type of tool%\"\" is %id of tool%.\""
            ],
            "since": "1.0",
            "typeName": "string",
            "className": "java.lang.String",
            "addonName": "Skript",
            "patterns": [
                "(text|string)s?"
            ]
        },
        {
            "id": 127773998,
            "description": [
                "The weather types sunny, rainy, and thundering."
            ],
            "usage": [
                "clear/sun/sunny, rain/rainy/raining, and thunder/thundering/thunderstorm"
            ],
            "examples": [
                "is raining",
                "is sunny in the player's world",
                "message \"It is %weather in the argument's world% in %world of the argument%\""
            ],
            "since": "1.0",
            "typeName": "weathertype",
            "className": "ch.njol.skript.util.WeatherType",
            "addonName": "Skript",
            "patterns": [
                "weather ?types?",
                "weather conditions?",
                "weathers?"
            ]
        },
        {
            "id": 3560141,
            "description": [
                "A time is a point in a minecraft day's time (i.e. ranges from 0:00 to 23:59), which can vary per world.",
                "See date and timespan for the other time types of Skript."
            ],
            "usage": [
                "##:##",
                "##[:##][ ]am/pm"
            ],
            "examples": [
                "at 20:00:",
                "\ttime is 8 pm",
                "\tbroadcast \"It's %time%\""
            ],
            "since": "1.0",
            "typeName": "time",
            "className": "ch.njol.skript.util.Time",
            "addonName": "Skript",
            "patterns": [
                "times?"
            ]
        },
        {
            "id": 1609677518,
            "description": [
                "A period of time between two times. Mostly useful since you can use this to test for whether it's day, night, dusk or dawn in a specific world.",
                "This type might be removed in the future as you can use 'time of world is between x and y' as a replacement."
            ],
            "usage": [
                "##:## - ##:##",
                "dusk/day/dawn/night"
            ],
            "examples": [
                "time in world is night"
            ],
            "since": "1.0",
            "typeName": "timeperiod",
            "className": "ch.njol.skript.util.Timeperiod",
            "addonName": "Skript",
            "patterns": [
                "durations?",
                "time ?periods?"
            ]
        },
        {
            "id": -962590849,
            "description": [
                "A direction, e.g. north, east, behind, 5 south east, 1.3 meters to the right, etc.",
                "Locations and some blocks also have a direction, but without a length.",
                "Please note that directions have changed extensively in the betas and might not work perfectly. They can also not be used as command arguments."
            ],
            "usage": [
                "see direction (expression)"
            ],
            "examples": [
                "set the block below the victim to a chest",
                "loop blocks from the block infront of the player to the block 10 below the player:",
                "\tset the block behind the loop-block to water"
            ],
            "since": "2.0",
            "typeName": "direction",
            "className": "ch.njol.skript.util.Direction",
            "addonName": "Skript",
            "patterns": [
                "directions?"
            ]
        },
        {
            "id": 94842723,
            "description": [
                "Wool, dye and chat colours."
            ],
            "usage": [
                "black, dark grey/dark gray, grey/light grey/gray/light gray/silver, white, blue/dark blue, cyan/aqua/dark cyan/dark aqua, light blue/light cyan/light aqua, green/dark green, light green/lime/lime green, yellow/light yellow, orange/gold/dark yellow, red/dark red, pink/light red, purple/dark purple, magenta/light purple, brown/indigo"
            ],
            "examples": [
                "color of the sheep is red or black",
                "set the colour of the block to green",
                "message \"You're holding a <%color of tool%>%color of tool%<reset> wool block\""
            ],
            "since": "",
            "typeName": "color",
            "className": "ch.njol.skript.util.Color",
            "addonName": "Skript",
            "patterns": [
                "colou?rs?"
            ]
        },
        {
            "id": -221656275,
            "description": [
                "A tree type represents a tree species or a huge mushroom species. These can be generated in a world with the generate tree effect."
            ],
            "usage": [
                "[any] <general tree/mushroom type>, e.g. tree/any jungle tree/etc.",
                "<specific tree/mushroom species>, e.g. red mushroom/small jungle tree/big regular tree/etc."
            ],
            "examples": [
                "grow any regular tree at the block",
                "grow a huge red mushroom above the block"
            ],
            "since": "",
            "typeName": "structuretype",
            "className": "ch.njol.skript.util.StructureType",
            "addonName": "Skript",
            "patterns": [
                "tree ?types?",
                "trees?"
            ]
        },
        {
            "id": -85567126,
            "description": [
                "Experience points. Please note that Bukkit only allows to give XP, but not remove XP from players. You can however change a player's level and level progress freely."
            ],
            "usage": [
                "[<number>] ([e]xp|experience [point[s]])"
            ],
            "examples": [
                "give 10 xp to the player"
            ],
            "since": "2.0",
            "typeName": "experience",
            "className": "ch.njol.skript.util.Experience",
            "addonName": "Skript"
        },
        {
            "id": 2106446033,
            "description": [
                "A visible effect, e.g. particles."
            ],
            "usage": [
                "ender signal, mobspawner flames, potion break, smoke, hurt, wolf smoke, wolf hearts, wolf shaking, sheep eating, iron golem offering rose, villager hearts, angry villager entity, happy villager entity, witch magic, zombie turning to a villager, firework explosion, arrow particles, jumping rabbit, love hearts, squid rotation reset, entity poof, guardian target, block with shield, shield break, armor stand hit, hurt by thorns, iron golem sheathing rose, resurrection by totem, hurt by drowning, visual effects.hurt_explosiion.name, firework's spark, critical hit, magical critical hit, potion swirl, transparent potion swirl, spell, spell, witch spell, note, portal, flying glyph, flame, lava pop, footstep, water splash, smoke particle, huge explosion, large explosion, explosion, void fog, small smoke, cloud, coloured dust, snowball break, water drip, lava drip, snow shovel, slime, heart, angry villager, happy villager, large smoke, item crack, block break, block dust, totem, spit, squid ink, bubble pop, current down, bubble column up, nautilus, dolphin, sneeze, campfire cosy smoke, campfire signal smoke, composter, flash, falling lava, landing lava, falling water, dripping honey, falling honey, landing honey, falling nectar"
            ],
            "examples": [
                "show wolf hearts on the clicked wolf",
                "play mob spawner flames at the targeted block to the player"
            ],
            "since": "2.1",
            "typeName": "visualeffect",
            "className": "ch.njol.skript.util.VisualEffect",
            "addonName": "Skript",
            "patterns": [
                "(visual|particle) effects?"
            ]
        },
        {
            "id": 93832333,
            "description": [
                "A block in a world. It has a location and a type, and can also have a direction (mostly a facing), an inventory, or other special properties."
            ],
            "usage": [
                ""
            ],
            "examples": [
                ""
            ],
            "since": "1.0",
            "typeName": "block",
            "className": "org.bukkit.block.Block",
            "addonName": "Skript",
            "patterns": [
                "blocks?"
            ]
        },
        {
            "id": 1901043637,
            "description": [
                "A location in a world. Locations are world-specific and even store a direction, e.g. if you save a location and later teleport to it you will face the exact same direction you did when you saved the location."
            ],
            "usage": [
                ""
            ],
            "examples": [
                ""
            ],
            "since": "1.0",
            "typeName": "location",
            "className": "org.bukkit.Location",
            "addonName": "Skript",
            "patterns": [
                "locations?"
            ]
        },
        {
            "id": -820387517,
            "description": [
                "Vector is a collection of numbers. In Minecraft, 3D vectors are used to express velocities of entities."
            ],
            "usage": [
                "vector(x, y, z)"
            ],
            "examples": [
                ""
            ],
            "since": "2.2-dev23",
            "typeName": "vector",
            "className": "org.bukkit.util.Vector",
            "addonName": "Skript",
            "patterns": [
                "vectors?"
            ]
        },
        {
            "id": 113318802,
            "description": [
                "One of the server's worlds. Worlds can be put into scripts by surrounding their name with double quotes, e.g. \"world_nether\", but this might not work reliably as text uses the same syntax."
            ],
            "usage": [
                "\"world_name\", e.g. \"world\""
            ],
            "examples": [
                "broadcast \"Hello!\" to the world \"world_nether\""
            ],
            "since": "1.0, 2.2 (alternate syntax)",
            "typeName": "world",
            "className": "org.bukkit.World",
            "addonName": "Skript",
            "patterns": [
                "worlds?"
            ]
        },
        {
            "id": -2020599460,
            "description": [
                "An inventory of a player or block. Inventories have many effects and conditions regarding the items contained.",
                "An inventory has a fixed amount of slots which represent a specific place in the inventory, e.g. the helmet slot for players (Please note that slot support is still very limited but will be improved eventually)."
            ],
            "usage": [
                ""
            ],
            "examples": [
                ""
            ],
            "since": "1.0",
            "typeName": "inventory",
            "className": "org.bukkit.inventory.Inventory",
            "addonName": "Skript",
            "patterns": [
                "inventor(y|ies)"
            ]
        },
        {
            "id": -985259374,
            "description": [
                "What player just did in inventory event. Note that when in creative game mode, most actions do not work correctly."
            ],
            "usage": [
                "nothing, pickup all, pickup some, pickup half, pickup one item, place all, place some, place one, swap with cursor, drop all from cursor, drop one from cursor, drop all from slot, drop one from slot, instant move, hotbar move and readd, swap with hotbar, clone stack, collect to cursor, unknown"
            ],
            "examples": [
                ""
            ],
            "since": "2.2-dev16",
            "typeName": "inventoryaction",
            "className": "org.bukkit.event.inventory.InventoryAction",
            "addonName": "Skript",
            "patterns": [
                "inventory ?actions?"
            ]
        },
        {
            "id": -1964093246,
            "description": [
                "Click type, mostly for inventory events. Tells exactly which keys/buttons player pressed, assuming that default keybindings are used in client side."
            ],
            "usage": [
                "left mouse button, left mouse button with shift, right mouse button, right mouse button with shift, window border using right mouse button, window border using left mouse button, middle mouse button, number key, double click using mouse, drop key, drop key with control, creative action, unknown"
            ],
            "examples": [
                ""
            ],
            "since": "2.2-dev16b, 2.2-dev35 (renamed to click type)",
            "typeName": "clicktype",
            "className": "org.bukkit.event.inventory.ClickType",
            "addonName": "Skript",
            "patterns": [
                "click ?types?"
            ]
        },
        {
            "id": -1524458858,
            "description": [
                "Minecraft has several different inventory types with their own use cases."
            ],
            "usage": [
                "chest inventory, dispenser inventory, dropper inventory, furnace inventory, workbench inventory, crafting table inventory, enchanting table inventory, brewing stand inventory, player inventory, creative inventory, merchant inventory, ender chest inventory, anvil inventory, beacon inventory, hopper inventory, shulker box inventory, barrel inventory, blast furnace inventory, lectern inventory, smoker inventory, loom inventory, cartography table inventory, grindstone inventory, stonecutter inventory"
            ],
            "examples": [
                ""
            ],
            "since": "2.2-dev32",
            "typeName": "inventorytype",
            "className": "org.bukkit.event.inventory.InventoryType",
            "addonName": "Skript",
            "patterns": [
                "inventory ?types?"
            ]
        },
        {
            "id": -985752863,
            "description": [
                "A player. Depending on whether a player is online or offline several actions can be performed with them, though you won't get any errors when using effects that only work if the player is online (e.g. changing their inventory) on an offline player.",
                "You have two possibilities to use players as command arguments: <player> and <offline player>. The first requires that the player is online and also accepts only part of the name, while the latter doesn't require that the player is online, but the player's name has to be entered exactly."
            ],
            "usage": [
                ""
            ],
            "examples": [
                ""
            ],
            "since": "1.0",
            "typeName": "player",
            "className": "org.bukkit.entity.Player",
            "addonName": "Skript",
            "patterns": [
                "players?"
            ]
        },
        {
            "id": -191270268,
            "description": [
                "A player that is possibly offline. See player for more information. Please note that while all effects and conditions that require a player can be used with an offline player as well, they will not work if the player is not actually online."
            ],
            "usage": [
                ""
            ],
            "examples": [
                ""
            ],
            "since": "",
            "typeName": "offlineplayer",
            "className": "org.bukkit.OfflinePlayer",
            "addonName": "Skript",
            "patterns": [
                "offline ?players?"
            ]
        },
        {
            "id": -1768407915,
            "description": [
                "The game modes survival, creative, adventure and spectator."
            ],
            "usage": [
                "creative/survival/adventure/spectator"
            ],
            "examples": [
                "player's gamemode is survival",
                "set the player argument's game mode to creative"
            ],
            "since": "1.0",
            "typeName": "gamemode",
            "className": "org.bukkit.GameMode",
            "addonName": "Skript",
            "patterns": [
                "game ?modes?"
            ]
        },
        {
            "id": -1999583714,
            "description": [
                "A potion effect type, e.g. 'strength' or 'swiftness'."
            ],
            "usage": [
                "null, speed, slowness, haste, mining fatigue, strength, instant health, instant damage, jump boost, nausea, regeneration, resistance, fire resistance, water breathing, invisibility, blindness, night vision, hunger, weakness, poison, wither, health boost, absorption, saturation, glowing, levitation, luck, bad luck, slow falling, conduit power, dolphins grace, bad omen, hero of the village"
            ],
            "examples": [
                "apply swiftness 5 to the player",
                "apply potion of speed 2 to the player for 60 seconds",
                "remove invisibility from the victim"
            ],
            "since": "",
            "typeName": "potioneffecttype",
            "className": "org.bukkit.potion.PotionEffectType",
            "addonName": "Skript",
            "patterns": [
                "potion( ?effect)?( ?type)?s?"
            ]
        },
        {
            "id": 94642797,
            "description": [
                "A chunk is a cuboid of 16×16×128 (x×z×y) blocks. Chunks are spread on a fixed rectangular grid in their world."
            ],
            "usage": [
                ""
            ],
            "examples": [
                ""
            ],
            "since": "2.0",
            "typeName": "chunk",
            "className": "org.bukkit.Chunk",
            "addonName": "Skript",
            "patterns": [
                "chunks?"
            ]
        },
        {
            "id": 222399799,
            "description": [
                "An enchantment, e.g. 'sharpness' or 'fortune'. Unlike enchantment type this type has no level, but you usually don't need to use this type anyway."
            ],
            "usage": [
                "Frost Walker, Feather Falling, Unbreaking, Knockback, Projectile Protection, Respiration, Punch, Protection, Blast Protection, Lure, Impaling, Smite, Silk Touch, Infinity, Luck of The Sea, Thorns, Multishot, Curse of Vanishing, Fire Aspect, Flame, Depth Strider, Piercing, Fire Protection, Sharpness, Power, Sweeping Edge, Aqua Affinity, Curse of Binding, Bane of Arthropods, Looting, Efficiency, Mending, Riptide, Quick Charge, Fortune, Loyalty, Channeling"
            ],
            "examples": [
                ""
            ],
            "since": "1.4.6",
            "typeName": "enchantment",
            "className": "org.bukkit.enchantments.Enchantment",
            "addonName": "Skript",
            "patterns": [
                "enchantments?"
            ]
        },
        {
            "id": -1869168610,
            "description": [
                "The teleport cause in a teleport event."
            ],
            "examples": [
                "ender pearl, command, plugin, nether portal, end portal, spectate, gateway, chorus, unknown"
            ],
            "since": "2.2-dev35",
            "typeName": "teleportcause",
            "className": "org.bukkit.event.player.PlayerTeleportEvent$TeleportCause",
            "addonName": "Skript",
            "patterns": [
                "teleport ?(cause|reason|type)s?"
            ]
        },
        {
            "id": -1112883841,
            "description": [
                "The spawn reason in a spawn event."
            ],
            "examples": [
                "natural, jockey, chunk generation, mob spawner, egg, spawn egg, lightning, built snowman, built iron golem, built wither, village defense, village invasion, breed, slime split, reinforcements, nether portal, dispense egg, infection, cured, ocelot baby, silverfish reveal, mount, trap, ender pearl, perching, drowned, shear, spawn reasons.explosion, spawn reasons.raid, spawn reasons.patrol, customized, default"
            ],
            "since": "2.3",
            "typeName": "spawnreason",
            "className": "org.bukkit.event.entity.CreatureSpawnEvent$SpawnReason",
            "addonName": "Skript",
            "patterns": [
                "spawn(ing)? ?reasons?"
            ]
        },
        {
            "id": 1261162718,
            "description": [
                "A server icon that was loaded using the load server icon effect."
            ],
            "examples": [
                ""
            ],
            "since": "2.3",
            "typeName": "cachedservericon",
            "className": "org.bukkit.util.CachedServerIcon",
            "addonName": "Skript",
            "patterns": [
                "server ?icons?"
            ]
        },
        {
            "id": 1819002369,
            "description": [
                "The type of a fireworkeffect."
            ],
            "examples": [
                "ball, large ball, star, burst, creeper"
            ],
            "since": "2.4",
            "typeName": "fireworktype",
            "className": "org.bukkit.FireworkEffect$Type",
            "addonName": "Skript",
            "patterns": [
                "firework ?types?"
            ]
        },
        {
            "id": -437691752,
            "description": [
                "A configuration of effects that defines the firework when exploded."
            ],
            "since": "2.4",
            "typeName": "fireworkeffect",
            "className": "org.bukkit.FireworkEffect",
            "addonName": "Skript",
            "patterns": [
                "firework ?effects?"
            ]
        },
        {
            "id": 1829500859,
            "description": [
                "The difficulty of a world."
            ],
            "examples": [
                "peaceful, easy, medium, hard"
            ],
            "since": "2.3",
            "typeName": "difficulty",
            "className": "org.bukkit.Difficulty",
            "addonName": "Skript",
            "patterns": [
                "difficult(y|ies)"
            ]
        },
        {
            "id": 130135498,
            "description": [
                "The state in a resource pack request response event."
            ],
            "examples": [
                "successfully load, decline, download fail, accept"
            ],
            "since": "2.4",
            "typeName": "resourcepackstate",
            "className": "org.bukkit.event.player.PlayerResourcePackStatusEvent$Status",
            "addonName": "Skript",
            "patterns": [
                "resource ?pack ?states?"
            ]
        },
        {
            "id": 1823803149,
            "description": [
                "The category of a sound, they are used for sound options of Minecraft. See the play sound and stop sound effects."
            ],
            "examples": [
                "master category, music category, record category, weather category, block category, hostile category, neutral category, player category, ambient category, voice category"
            ],
            "since": "2.4",
            "typeName": "soundcategory",
            "className": "org.bukkit.SoundCategory",
            "addonName": "Skript",
            "patterns": [
                "sound ?categor(y|ies)"
            ]
        },
        {
            "id": 3169045,
            "description": [
                "Represents a Panda's main or hidden gene. See genetics for more info."
            ],
            "examples": [
                "normal, lazy, worried, playful, brown, weak, aggressive"
            ],
            "since": "2.4",
            "typeName": "gene",
            "className": "org.bukkit.entity.Panda$Gene",
            "addonName": "Skript",
            "patterns": [
                "(panda )?genes?"
            ]
        },
        {
            "id": 556282896,
            "description": [
                "Represents the race/type of a cat entity."
            ],
            "examples": [
                "cat types.tabby, cat types.black, cat types.red, cat types.siamese, cat types.british_shorthair, cat types.calico, cat types.persian, cat types.ragdoll, cat types.white, cat types.jellie, cat types.all_black"
            ],
            "since": "2.4",
            "typeName": "cattype",
            "className": "org.bukkit.entity.Cat$Type",
            "addonName": "Skript",
            "patterns": [
                "cat ?(type|race)s?"
            ]
        },
        {
            "id": 104079552,
            "description": [
                "A certain amount of money. Please note that this differs from numbers as it includes a currency symbol or name, but usually the two are interchangeable, e.g. you can both add 100$ to the player's balance and add 100 to the player's balance."
            ],
            "usage": [
                "<number> $ or $ <number>, where '$' is your server's currency, e.g. '10 rupees' or '£5.00'"
            ],
            "examples": [
                "add 10£ to the player's account",
                "remove Fr. 9.95 from the player's money",
                "set the victim's money to 0",
                "increase the attacker's balance by the level of the victim * 100"
            ],
            "since": "2.0",
            "typeName": "money",
            "className": "ch.njol.skript.hooks.economy.classes.Money",
            "addonName": "Skript",
            "patterns": [
                "money"
            ]
        },
        {
            "id": 1958052158,
            "typeName": "integer",
            "className": "java.lang.Integer",
            "addonName": "Skript"
        },
        {
            "id": -2076435561,
            "description": [
                "A timespan is a difference of two different dates or times, e.g '10 minutes'. Timespans are always displayed as real life time, but can be defined as minecraft time, e.g. '5 minecraft days and 12 hours'.",
                "See date and time for the other time types of Skript."
            ],
            "usage": [
                "<number> [minecraft/mc/real/rl/irl] ticks/seconds/minutes/hours/days [[,/and] <more...>]",
                "[###:]##:##[.####] ([hours:]minutes:seconds[.milliseconds])"
            ],
            "examples": [
                "every 5 minecraft days:",
                "\twait a minecraft second and 5 ticks",
                "every 10 mc days and 12 hours:",
                "\thalt for 12.7 irl minutes, 12 hours and 120.5 seconds"
            ],
            "since": "1.0",
            "typeName": "timespan",
            "className": "ch.njol.skript.util.Timespan",
            "addonName": "Skript",
            "patterns": [
                "time ?spans?"
            ]
        },
        {
            "id": 1257285873,
            "description": [
                "An enchantment with an optional level, e.g. 'sharpness 2' or 'fortune'."
            ],
            "usage": [
                "<enchantment> [<level>]"
            ],
            "examples": [
                "enchant the player's tool with sharpness 5",
                "helmet is enchanted with waterbreathing"
            ],
            "since": "1.4.6",
            "typeName": "enchantmenttype",
            "className": "ch.njol.skript.util.EnchantmentType",
            "addonName": "Skript",
            "patterns": [
                "enchant(ing|ment) types?"
            ]
        },
        {
            "id": -1034364087,
            "description": [
                "A number, e.g. 2.5, 3, or -9812454.",
                "Please note that many expressions only need integers, i.e. will discard any frational parts of any numbers without producing an error."
            ],
            "usage": [
                "[-]###[.###]</code> (any amount of digits; very large numbers will be truncated though)"
            ],
            "examples": [
                "set the player's health to 5.5",
                "set {_temp} to 2*{_temp} - 2.5"
            ],
            "since": "1.0",
            "typeName": "number",
            "className": "java.lang.Number",
            "addonName": "Skript",
            "patterns": [
                "num(ber)?s?"
            ]
        },
        {
            "id": 1178486989,
            "description": [
                "An item type is an alias, e.g. 'a pickaxe', 'all plants', etc., and can result in different items when added to an inventory, and unlike items they are well suited for checking whether an inventory contains a certain item or whether a certain item is of a certain type.",
                "An item type can also have one or more enchantments with or without a specific level defined, and can optionally start with 'all' or 'every' to make this item type represent all types that the alias represents, including data ranges."
            ],
            "usage": [
                "[<number> [of]] [all/every] <alias> [of <enchantment> [<level>] [,/and <more enchantments...>]]"
            ],
            "examples": [
                "give 4 torches to the player",
                "add all slabs to the inventory of the block",
                "player's tool is a diamond sword of sharpness",
                "remove a pickaxes of fortune 4 from {stored items::*}",
                "set {_item} to 10 of every upside-down stair",
                "block is dirt or farmland"
            ],
            "since": "1.0",
            "typeName": "itemtype",
            "className": "ch.njol.skript.aliases.ItemType",
            "addonName": "Skript",
            "patterns": [
                "item ?types?",
                "items",
                "materials"
            ]
        },
        {
            "id": -1482544627,
            "description": [
                "The type of an entity, e.g. player, wolf, powered creeper, etc."
            ],
            "usage": [
                "Detailed usage will be added eventually"
            ],
            "examples": [
                "victim is a cow",
                "spawn a creeper"
            ],
            "since": "1.3",
            "typeName": "entitydata",
            "className": "ch.njol.skript.entity.EntityData",
            "addonName": "Skript",
            "possibleValues": [
                "boat¦s",
                "oak boat¦s",
                "spruce boat¦s",
                "birch boat¦s",
                "jungle boat¦s",
                "acacia boat¦s",
                "dark oak boat¦s",
                "cat¦s",
                "unpowered creeper¦s @an",
                "creeper¦s",
                "powered creeper¦s",
                "dropped item¦s",
                "ender¦man¦men @an",
                "falling block¦s",
                "tropical fish¦es",
                "kob¦s",
                "sunstreak¦s",
                "snooper¦s",
                "dasher¦s",
                "brinely¦s",
                "spotty¦s",
                "flopper¦s",
                "stripey¦s",
                "glitter¦s",
                "blockfish¦s",
                "betty¦s",
                "clayfish¦s",
                "fish¦es",
                "cod¦s",
                "puffer fish¦es",
                "salmon¦s",
                "fox¦es",
                "red fox¦es",
                "snow fox¦es",
                "llama¦s",
                "creamy llama¦s",
                "white llama¦s",
                "brown llama¦s",
                "gray llama¦s",
                "trader llama¦s",
                "creamy trader llama¦s",
                "white trader llama¦s",
                "brown trader llama¦s",
                "gray trader llama¦s",
                "minecart¦s",
                "regular minecart¦s",
                "storage minecart¦s",
                "powered minecart¦s",
                "hopper minecart¦s",
                "explosive minecart¦s",
                "spawner minecart¦s",
                "mooshroom¦s",
                "red mooshroom¦s",
                "brown mooshroom¦s",
                "ocelot¦s @an",
                "panda¦s",
                "parrot¦s",
                "red parrot¦s",
                "blue parrot¦s",
                "green parrot¦s",
                "cyan parrot¦s",
                "gray parrot¦s",
                "unsaddled pig¦s @an",
                "pig¦s",
                "saddled pig¦s",
                "non-op¦s",
                "player¦s",
                "op¦s @an",
                "rabbit¦s",
                "unsheared sheep @an",
                "sheep",
                "sheared sheep",
                "thrown potion¦s",
                "villager¦s",
                "armorer¦s",
                "butcher¦s",
                "cartographer¦s",
                "cleric¦s",
                "farmer¦s",
                "fisherman¦s",
                "fletcher¦s",
                "leatherworker¦s",
                "librarian¦s",
                "mason¦s",
                "nitwit¦s",
                "shepherd¦s",
                "toolsmith¦s",
                "weaponsmith¦s",
                "angry wol¦f¦ves @an",
                "wol¦f¦ves",
                "peaceful wol¦f¦ves",
                "wild wol¦f¦ves",
                "tamed wol¦f¦ves",
                "experience orb¦s @an",
                "zombie villager¦s",
                "zombie farmer¦s",
                "zombie librarian¦s",
                "zombie priest¦s",
                "zombie blacksmith¦s",
                "zombie butcher¦s",
                "zombie nitwit¦s",
                "arrow¦s @an",
                "spectral arrow",
                "tipped arrow¦s",
                "blaze¦s",
                "chicken¦s",
                "cow¦s",
                "cave spider¦s",
                "dragon fireball¦s",
                "egg¦s @an",
                "ender crystal¦s @an",
                "ender dragon¦s @an",
                "ender pearl¦s @an",
                "small fireball¦s",
                "large fireball¦s",
                "fireball¦s",
                "fish hook¦s",
                "ghast¦s",
                "giant¦s",
                "iron golem¦s @an",
                "magma cube¦s",
                "slime¦s",
                "painting¦s",
                "zombie pig¦man¦men",
                "silverfish¦es",
                "snowball¦s",
                "snow golem¦s",
                "spider¦s",
                "squid¦s",
                "bottle¦ of enchanting¦s of enchanting",
                "TNT",
                "leash hitch¦es",
                "item frame¦s @an",
                "bat¦s",
                "witch¦es",
                "wither¦s",
                "wither skull¦s",
                "firework rocket¦s",
                "endermite¦s",
                "armor stand¦s",
                "shulker¦s",
                "shulker bullet¦s",
                "polar bear¦s",
                "area effect cloud¦s",
                "wither skeleton¦s",
                "stray¦s",
                "husk¦s",
                "skeleton¦s",
                "elder guardian¦s",
                "normal guardian¦s",
                "guardian¦s",
                "donkey¦s",
                "mule¦s",
                "undead horse¦s @an",
                "skeleton horse¦s",
                "horse¦s",
                "chested horse¦s",
                "any horse¦s",
                "llama spit¦s",
                "evoker¦s",
                "evoker fangs",
                "vex¦es",
                "vindicator¦s",
                "dolphin¦s",
                "phantom¦s",
                "drowned¦s",
                "turtle¦s",
                "trident¦s",
                "pillager¦s",
                "ravager¦s",
                "wandering trader¦s",
                "raider¦s",
                "illusioner¦s",
                "zombie¦s",
                "human¦s",
                "damageable mob¦s",
                "monster¦s",
                "mob¦s",
                "creature¦s",
                "animal¦s",
                "golem¦s",
                "projectile¦s",
                "living entit¦y¦ies",
                "entit¦y¦ies @an",
                "water mob¦s",
                "any fireball¦s"
            ],
            "patterns": [
                "entity ?types?"
            ]
        },
        {
            "id": -1298275357,
            "description": [
                "An entity is something in a world that's not a block, e.g. a player, a skeleton, or a zombie, but also projectiles like arrows, fireballs or thrown potions, or special entities like dropped items, falling blocks or paintings."
            ],
            "usage": [
                "player, op, wolf, tamed ocelot, powered creeper, zombie, unsaddled pig, fireball, arrow, dropped item, item frame, etc."
            ],
            "examples": [
                "entity is a zombie or creeper",
                "player is an op",
                "projectile is an arrow",
                "shoot a fireball from the player"
            ],
            "since": "1.0",
            "typeName": "entity",
            "className": "org.bukkit.entity.Entity",
            "addonName": "Skript",
            "patterns": [
                "entit(y|ies)"
            ]
        },
        {
            "id": 1073091904,
            "description": [
                "A player or the console."
            ],
            "usage": [
                "use the console for the console",
                "see player for players."
            ],
            "examples": [
                "on command /pm:",
                "\tcommand sender is not the console",
                "\tchance of 10%",
                "\tgive coal to the player",
                "\tmessage \"You got a piece of coal for sending that PM!\""
            ],
            "since": "1.0",
            "typeName": "commandsender",
            "className": "org.bukkit.command.CommandSender",
            "addonName": "Skript",
            "patterns": [
                "((commands?)? ?)?(sender|executor)s?"
            ]
        },
        {
            "id": -774016504,
            "typeName": "inventoryholder",
            "className": "org.bukkit.inventory.InventoryHolder",
            "addonName": "Skript"
        },
        {
            "id": -2122695851,
            "description": [
                "An item, e.g. a stack of torches, a furnace, or a wooden sword of sharpness 2. Unlike item type an item can only represent exactly one item (e.g. an upside-down cobblestone stair facing west), while an item type can represent a whole range of items (e.g. any cobble stone stairs regardless of direction).",
                "You don't usually need this type except when you want to make a command that only accepts an exact item.",
                "Please note that currently 'material' is exactly the same as 'item', i.e. can have an amount & enchantments."
            ],
            "usage": [
                "[<number> [of]] <alias> [of <enchantment> <level>], Where <alias> must be an alias that represents exactly one item (i.e cannot be a general alias like 'sword' or 'plant')"
            ],
            "examples": [
                "set {_item} to type of the targeted block",
                "{_item} is a torch"
            ],
            "since": "1.0",
            "typeName": "itemstack",
            "className": "org.bukkit.inventory.ItemStack",
            "addonName": "Skript",
            "patterns": [
                "item",
                "material"
            ]
        },
        {
            "id": -1482045027,
            "description": [
                "An entity type with an amount, e.g. '2 zombies'. I might remove this type in the future and make a more general 'type' type, i.e. a type that has a number and a type."
            ],
            "usage": [
                "<number> <entity type>"
            ],
            "examples": [
                "spawn 5 creepers behind the player"
            ],
            "since": "1.3",
            "typeName": "entitytype",
            "className": "ch.njol.skript.entity.EntityType",
            "addonName": "Skript"
        },
        {
            "id": -9072090,
            "description": [
                "Represents a type, e.g. number, object, item type, location, block, world, entity type, etc.",
                "This is mostly used for expressions like 'event-<type>', '<type>-argument', 'loop-<type>', etc., e.g. event-world, number-argument and loop-player."
            ],
            "usage": [
                "See the type name patterns of all types - including this one"
            ],
            "examples": [
                "{variable} is a number # check whether the variable contains a number, e.g. -1 or 5.5",
                "{variable} is a type # check whether the variable contains a type, e.g. number or player",
                "{variable} is an object # will always succeed if the variable is set as everything is an object, even types.",
                "disable PvP in the event-world",
                "kill the loop-entity"
            ],
            "since": "2.0",
            "typeName": "classinfo",
            "className": "ch.njol.skript.classes.ClassInfo",
            "addonName": "Skript",
            "patterns": [
                "types?"
            ]
        },
        {
            "id": 825964122,
            "description": [
                "The cause/type of a damage event, e.g. lava, fall, fire, drowning, explosion, poison, etc.",
                "Please note that support for this type is very rudimentary, e.g. lava, fire and burning, as well as projectile and attack are considered different types."
            ],
            "usage": [
                "contact, attack, sweep attack, projectile, suffocation, fall, fire, burning, melting, lava, drowning, block explosion, entity explosion, void, lightning, suicide, starvation, poison, potion, wither, falling block, thorns, dragon's breath, unknown, hitting wall while flying, magma, cramming, dryout"
            ],
            "examples": [
                ""
            ],
            "since": "2.0",
            "typeName": "damagecause",
            "className": "org.bukkit.event.entity.EntityDamageEvent$DamageCause",
            "addonName": "Skript",
            "patterns": [
                "damage ?causes?"
            ]
        },
        {
            "id": 93743264,
            "description": [
                "All possible biomes Minecraft uses to generate a world."
            ],
            "usage": [
                "Biome names; you can use F3 ingame"
            ],
            "examples": [
                "biome at the player is desert"
            ],
            "since": "1.4.4",
            "typeName": "biome",
            "className": "org.bukkit.block.Biome",
            "addonName": "Skript",
            "patterns": [
                "biomes?"
            ]
        }
    ],
    "conditions": [
        {
            "patterns": [
                "%livingentities% (doesn't|does not|do not|don't) have (ai|artificial intelligence)",
                "%livingentities% (has|have) (ai|artificial intelligence)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondAI"
        },
        {
            "patterns": [
                "%strings% (isn't|is not|aren't|are not) alphanumeric",
                "%strings% (is|are) alphanumeric"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondAlphanumeric"
        },
        {
            "patterns": [
                "[the] event (is not|isn't) cancel[l]ed",
                "[the] event is cancel[l]ed"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondCancelled"
        },
        {
            "patterns": [
                "%players% (can't|cannot|can not) fly",
                "%players% can fly"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondCanFly"
        },
        {
            "patterns": [
                "%inventories% (can hold|ha(s|ve) [enough] space (for|to hold)) %itemtypes%",
                "%inventories% (can(no|')t hold|(ha(s|ve) not|ha(s|ve)n't|do[es]n't have) [enough] space (for|to hold)) %itemtypes%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondCanHold"
        },
        {
            "patterns": [
                "%players% (is|are) [(1¦in)]visible for %players%",
                "%players% (is|are)(n't| not) [(1¦in)]visible for %players%",
                "%players% can see %players%",
                "%players% can('t| not) see %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondCanSee"
        },
        {
            "patterns": [
                "chance of %number%(1¦\\%|)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondChance"
        },
        {
            "patterns": [
                "(1¦neither|) %objects% ((is|are)(|2¦(n't| not|4¦ neither)) ((greater|more|higher|bigger|larger) than|above)|\\>) %objects%",
                "(1¦neither|) %objects% ((is|are)(|2¦(n't| not|4¦ neither)) ((less|smaller) than|below)|\\<) %objects%",
                "(1¦neither|) %objects% ((is|are)(|2¦(n't| not|4¦ neither)) (greater|more|higher|bigger|larger|above) [than] or (equal to|the same as)|\\>=) %objects%",
                "(1¦neither|) %objects% ((is|are)(|2¦(n't| not|4¦ neither)) (less|smaller|below) [than] or (equal to|the same as)|\\<=) %objects%",
                "(1¦neither|) %objects% (2¦)((is|are) (not|4¦neither)|isn't|aren't|!=) [equal to] %objects%",
                "(1¦neither|) %objects% (2¦)(is not|are not|isn't|aren't) between %objects% and %objects%",
                "(1¦neither|) %objects% (is|are) between %objects% and %objects%",
                "(1¦neither|) %objects% (is|are|=) [(equal to|the same as)] %objects%",
                "(1¦neither|) %objects@-1% (2¦)((was|were) (not|4¦neither)|wasn't|weren't) [equal to] %objects%",
                "(1¦neither|) %objects@-1% (2¦)(was not|were not|wasn't|weren't) between %objects% and %objects%",
                "(1¦neither|) %objects@-1% (was|were) [(equal to|the same as)] %objects%",
                "(1¦neither|) %objects@-1% (was|were) between %objects% and %objects%",
                "(1¦neither|) %objects@-1% (was|were)(|2¦(n't| not|4¦ neither)) ((greater|more|higher|bigger|larger) than|above) %objects%",
                "(1¦neither|) %objects@-1% (was|were)(|2¦(n't| not|4¦ neither)) ((less|smaller) than|below) %objects%",
                "(1¦neither|) %objects@-1% (was|were)(|2¦(n't| not|4¦ neither)) (greater|more|higher|bigger|larger|above) [than] or (equal to|the same as) %objects%",
                "(1¦neither|) %objects@-1% (was|were)(|2¦(n't| not|4¦ neither)) (less|smaller|below) [than] or (equal to|the same as) %objects%",
                "(1¦neither|) %objects@1% (2¦)((will (not|4¦neither) be|won't be)|(isn't|aren't|is not|are not) (turning|changing) [in]to) [equal to] %objects%",
                "(1¦neither|) %objects@1% (2¦)(will not be|won't be) between %objects% and %objects%",
                "(1¦neither|) %objects@1% (will be [(equal to|the same as)]|(is|are) (turning|changing) [in]to) %objects%",
                "(1¦neither|) %objects@1% (will be|2¦(will (not|4¦neither) be|won't be)) ((greater|more|higher|bigger|larger) than|above) %objects%",
                "(1¦neither|) %objects@1% (will be|2¦(will (not|4¦neither) be|won't be)) ((less|smaller) than|below) %objects%",
                "(1¦neither|) %objects@1% (will be|2¦(will (not|4¦neither) be|won't be)) (greater|more|higher|bigger|larger|above) [than] or (equal to|the same as) %objects%",
                "(1¦neither|) %objects@1% (will be|2¦(will (not|4¦neither) be|won't be)) (less|smaller|below) [than] or (equal to|the same as) %objects%",
                "(1¦neither|) %objects@1% will be between %objects% and %objects%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondCompare"
        },
        {
            "patterns": [
                "%inventories% (doesn't|does not|do not|don't) have %itemtypes% [in [(the[ir]|his|her|its)] inventory]",
                "%inventories% (has|have) %itemtypes% [in [(the[ir]|his|her|its)] inventory]",
                "%inventories/strings/objects% (doesn't|does not|do not|don't) contain %itemtypes/strings/objects%",
                "%inventories/strings/objects% contain[s] %itemtypes/strings/objects%",
                "(all|1¦any|2¦none) of %strings% contain[s] %strings%",
                "[the] list [of] %objects% (doesn't|does not|do not|don't) contain %objects%",
                "[the] list [of] %objects% contain[s] %objects%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondContains"
        },
        {
            "patterns": [
                "[the] damage (was|is|has)(0¦|1¦n('|o)t) [been] (caused|done|made) by %damagecause%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondDamageCause"
        },
        {
            "patterns": [
                "%date% (was|were)( more|(n't| not) less) than %timespan% [ago]",
                "%date% (was|were)((n't| not) more| less) than %timespan% [ago]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondDate"
        },
        {
            "patterns": [
                "%players% (doesn't|does not|do not|don't) have [a] (client|custom) weather [set]",
                "%players% (has|have) [a] (client|custom) weather [set]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondHasClientWeather"
        },
        {
            "patterns": [
                "%itemtypes% (doesn't|does not|do not|don't) have [custom] model data",
                "%itemtypes% (has|have) [custom] model data"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondHasCustomModelData"
        },
        {
            "patterns": [
                "%metadataholders% (doesn't|does not|do not|don't) have metadata [(value|tag)[s]] %strings%",
                "%metadataholders% (has|have) metadata [(value|tag)[s]] %strings%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondHasMetadata"
        },
        {
            "patterns": [
                "%players% (doesn't|does not|do not|don't) have [a] resource pack [(loaded|installed)]",
                "%players% (has|have) [a] resource pack [(loaded|installed)]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondHasResourcePack"
        },
        {
            "patterns": [
                "%entities% (doesn't|does not|do not|don't) have [the] score[ ]board tag[s] %strings%",
                "%entities% (has|have) [the] score[ ]board tag[s] %strings%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondHasScoreboardTag"
        },
        {
            "patterns": [
                "%entities% (isn't|is not|aren't|are not) (alive|1¦dead)",
                "%entities% (is|are) (alive|1¦dead)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsAlive"
        },
        {
            "patterns": [
                "%offlineplayers/strings% (isn't|is not|aren't|are not) banned",
                "%offlineplayers/strings% (is|are) banned",
                "%players/strings% (isn't|is not|aren't|are not) IP(-| |)banned",
                "%players/strings% (is|are) IP(-| |)banned"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsBanned"
        },
        {
            "patterns": [
                "%itemtypes% (isn't|is not|aren't|are not) ([a] block|blocks)",
                "%itemtypes% (is|are) ([a] block|blocks)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsBlock"
        },
        {
            "patterns": [
                "%players% (isn't|is not|aren't|are not) (blocking|defending) [with [a] shield]",
                "%players% (is|are) (blocking|defending) [with [a] shield]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsBlocking"
        },
        {
            "patterns": [
                "%entities% (isn't|is not|aren't|are not) (burning|ignited|on fire)",
                "%entities% (is|are) (burning|ignited|on fire)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsBurning"
        },
        {
            "patterns": [
                "%itemtypes% (isn't|is not|aren't|are not) edible",
                "%itemtypes% (is|are) edible"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsEdible"
        },
        {
            "patterns": [
                "%inventories/slots/strings% (isn't|is not|aren't|are not) empty",
                "%inventories/slots/strings% (is|are) empty"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsEmpty"
        },
        {
            "patterns": [
                "%itemtypes% (isn't|is not|aren't|are not) enchanted [with %-enchantmenttype%]",
                "%itemtypes% (is|are) enchanted [with %-enchantmenttype%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsEnchanted"
        },
        {
            "patterns": [
                "%itemtypes% (isn't|is not|aren't|are not) flammable",
                "%itemtypes% (is|are) flammable"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsFlammable"
        },
        {
            "patterns": [
                "%players% (isn't|is not|aren't|are not) flying",
                "%players% (is|are) flying"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsFlying"
        },
        {
            "patterns": [
                "%entities% (isn't|is not|aren't|are not) invulnerable",
                "%entities% (is|are) invulnerable"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsInvulnerable"
        },
        {
            "patterns": [
                "%entities% (isn't|is not|aren't|are not) in [[the] world[s]] %worlds%",
                "%entities% (is|are) in [[the] world[s]] %worlds%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsInWorld"
        },
        {
            "patterns": [
                "%worlds/chunks% (isn't|is not|aren't|are not) loaded",
                "%worlds/chunks% (is|are) loaded"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsLoaded"
        },
        {
            "patterns": [
                "%itemstacks/entities% (isn't|is not|aren't|are not) of type[s] %entitytypes/entitydatas%",
                "%itemstacks/entities% (is|are) of type[s] %entitytypes/entitydatas%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsOfType"
        },
        {
            "patterns": [
                "%entities% (isn't|is not|aren't|are not) on [the] ground",
                "%entities% (is|are) on [the] ground"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsOnGround"
        },
        {
            "patterns": [
                "%offlineplayers% (isn't|is not|aren't|are not) (online|1¦offline)",
                "%offlineplayers% (is|are) (online|1¦offline)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsOnline"
        },
        {
            "patterns": [
                "%livingentities% (isn't|is not|aren't|are not) poisoned",
                "%livingentities% (is|are) poisoned"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsPoisoned"
        },
        {
            "patterns": [
                "%entities% (isn't|is not|aren't|are not) riding [%entitydatas%]",
                "%entities% (is|are) riding [%entitydatas%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsRiding"
        },
        {
            "patterns": [
                "%livingentities% (isn't|is not|aren't|are not) riptiding",
                "%livingentities% (is|are) riptiding"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsRiptiding"
        },
        {
            "patterns": [
                "%~objects% (do[es](n't| not) exist|(is|are)(n't| not) set)",
                "%~objects% (exist[s]|(is|are) set)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsSet"
        },
        {
            "patterns": [
                "%entities% (isn't|is not|aren't|are not) silent",
                "%entities% (is|are) silent"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsSilent"
        },
        {
            "patterns": [
                "%players% (isn't|is not|aren't|are not) sleeping",
                "%players% (is|are) sleeping"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsSleeping"
        },
        {
            "patterns": [
                "%chunk% (isn't|is not|aren't|are not) ([a] slime chunk|slime chunks|slimey)",
                "%chunk% (is|are) ([a] slime chunk|slime chunks|slimey)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsSlimeChunk"
        },
        {
            "patterns": [
                "%players% (isn't|is not|aren't|are not) sneaking",
                "%players% (is|are) sneaking"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsSneaking"
        },
        {
            "patterns": [
                "%itemtypes% (isn't|is not|aren't|are not) solid",
                "%itemtypes% (is|are) solid"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsSolid"
        },
        {
            "patterns": [
                "%players% (isn't|is not|aren't|are not) sprinting",
                "%players% (is|are) sprinting"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsSprinting"
        },
        {
            "patterns": [
                "%livingentities% (isn't|is not|aren't|are not) swimming",
                "%livingentities% (is|are) swimming"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsSwimming"
        },
        {
            "patterns": [
                "%livingentities% (isn't|is not|aren't|are not) tameable",
                "%livingentities% (is|are) tameable"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsTameable"
        },
        {
            "patterns": [
                "%itemtypes% (isn't|is not|aren't|are not) transparent",
                "%itemtypes% (is|are) transparent"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsTransparent"
        },
        {
            "patterns": [
                "%livingentities% (isn't|is not|aren't|are not) wearing %itemtypes%",
                "%livingentities% (is|are) wearing %itemtypes%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondIsWearing"
        },
        {
            "patterns": [
                "[%livingentities%] (ha(s|ve) not|do[es]n't have) %itemtypes% in [main] hand",
                "[%livingentities%] (ha(s|ve) not|do[es]n't have) %itemtypes% in off[(-| )]hand",
                "[%livingentities%] (is not|isn't) holding %itemtypes% [in main hand]",
                "[%livingentities%] (is not|isn't) holding %itemtypes% in off[(-| )]hand",
                "[%livingentities%] (is|are) holding %itemtypes% [in main hand]",
                "[%livingentities%] (is|are) holding %itemtypes% in off[(-| )]hand",
                "[%livingentities%] ha(s|ve) %itemtypes% in [main] hand",
                "[%livingentities%] ha(s|ve) %itemtypes% in off[(-| )]hand"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondItemInHand"
        },
        {
            "patterns": [
                "%livingentities% (isn't|is not|aren't|are not) leashed",
                "%livingentities% (is|are) leashed"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondLeashed"
        },
        {
            "patterns": [
                "%commandsenders% (doesn't|does not|do not|don't) have [the] permission[s] %strings%",
                "%commandsenders% (has|have) [the] permission[s] %strings%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondPermission"
        },
        {
            "patterns": [
                "%offlineplayer% (has not|hasn't|did not|didn't) [(already|yet)] play[ed] [on (this|the) server] (before|already|yet)",
                "%offlineplayer% [(has|did)] [already] play[ed] [on (this|the) server] (before|already)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondPlayedBefore"
        },
        {
            "patterns": [
                "(is PvP|PvP is) disabled [in %worlds%]",
                "(is PvP|PvP is) enabled [in %worlds%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondPvP"
        },
        {
            "patterns": [
                "[the] resource pack (was|is|has) [been] %resourcepackstate%",
                "[the] resource pack (was|is|has)(n't| not) [been] %resourcepackstate%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondResourcePack"
        },
        {
            "patterns": [
                "script[s] [%-strings%] (isn't|is not|aren't|are not) loaded",
                "script[s] [%-strings%] (is|are) loaded"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondScriptLoaded"
        },
        {
            "patterns": [
                "%strings% (doesn't|does not|do not|don't) (start|1¦end) with %string%",
                "%strings% (start|1¦end)[s] with %string%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondStartsEndsWith"
        },
        {
            "patterns": [
                "is %weathertypes% [in %worlds%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.conditions.CondWeather"
        }
    ],
    "events": [
        {
            "name": "At Time",
            "id": -694180007,
            "patterns": [
                "at %time% [in %worlds%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "An event that occurs at a given minecraft time in every world or only in specific worlds."
            ],
            "examples": [
                "at 18:00",
                "at 7am in \"world\""
            ],
            "since": "1.3.4",
            "addonName": "Skript",
            "classNames": [
                "ch.njol.skript.events.bukkit.ScheduledEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Break / Mine",
            "id": 1303268243,
            "patterns": [
                "[block] (break[ing]|1¦min(e|ing)) [[of] %itemtypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Hanging"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [
                {
                    "valueName": "past [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "former [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "futureEventValues": [
                {
                    "valueName": "future [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "latter [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "description": [
                "Called when a block is broken by a player. If you use 'on mine', only events where the broken block dropped something will call the trigger."
            ],
            "examples": [
                "on mine:",
                "on break of stone:",
                "on mine of any ore:"
            ],
            "since": "1.0 (break), <i>unknown</i> (mine)",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.BlockBreakEvent",
                "org.bukkit.event.player.PlayerBucketFillEvent",
                "org.bukkit.event.hanging.HangingBreakEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Burn",
            "id": 3035599,
            "patterns": [
                "[block] burn[ing] [[of] %itemtypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a block is destroyed by fire."
            ],
            "examples": [
                "on burn:",
                "on burn of wood, fences, or chests:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.BlockBurnEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Place",
            "id": 106748167,
            "patterns": [
                "[block] (plac(e|ing)|build[ing]) [[of] %itemtypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]direction",
                    "valueClass": "ch.njol.skript.util.Direction"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Hanging"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [
                {
                    "valueName": "past [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "former [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "past [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "former [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "futureEventValues": [
                {
                    "valueName": "future [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "latter [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "future [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "latter [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "description": [
                "Called when a player places a block."
            ],
            "examples": [
                "on place:",
                "on place of a furnace, workbench or chest:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.BlockPlaceEvent",
                "org.bukkit.event.player.PlayerBucketEmptyEvent",
                "org.bukkit.event.hanging.HangingPlaceEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Fade",
            "id": 3135100,
            "patterns": [
                "[block] fad(e|ing) [[of] %itemtypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [
                {
                    "valueName": "past [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "former [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "futureEventValues": [
                {
                    "valueName": "future [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "latter [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "description": [
                "Called when a block 'fades away', e.g. ice or snow melts."
            ],
            "examples": [
                "on fade of snow or ice:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.BlockFadeEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Form",
            "id": 3148996,
            "patterns": [
                "[block] form[ing] [[of] %itemtypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [
                {
                    "valueName": "past [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "former [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "futureEventValues": [
                {
                    "valueName": "future [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "latter [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "description": [
                "Called when a block is created, but not by a player, e.g. snow forms due to snowfall, water freezes in cold biomes. This isn't called when block spreads (mushroom growth, water physics etc.), as it has its own event (see spread event)."
            ],
            "examples": [
                "on form of snow:",
                "on form of a mushroom:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.BlockFormEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Book Edit",
            "id": 2024363424,
            "patterns": [
                "book (edit|change|write)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player edits a book."
            ],
            "examples": [
                "on book edit:"
            ],
            "since": "2.2-dev31",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerEditBookEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Book Sign",
            "id": 2024785235,
            "patterns": [
                "book sign[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player signs a book."
            ],
            "examples": [
                "on book sign:"
            ],
            "since": "2.2-dev31",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerEditBookEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Chat",
            "id": 3052376,
            "patterns": [
                "chat"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called whenever a player chats. Use chat format to change message format, use chat recipients to edit chat recipients."
            ],
            "examples": [
                "on chat:",
                "\tif player has permission \"owner\":",
                "\t\tset chat format to \"<red>[player]<light gray>: <light red>[message]\"",
                "\telse if player has permission \"admin\":",
                "\t\tset chat format to \"<light red>[player]<light gray>: <orange>[message]\"",
                "\telse: #default message format",
                "\t\tset chat format to \"<orange>[player]<light gray>: <white>[message]\""
            ],
            "since": "1.4.1",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.AsyncPlayerChatEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Click",
            "id": 94750088,
            "patterns": [
                "[(1¦right|2¦left)(| |-)][mouse(| |-)]click[ing] (with|using|holding) %itemtype% on %entitydata/itemtype%",
                "[(1¦right|2¦left)(| |-)][mouse(| |-)]click[ing] [on %-entitydata/itemtype%] [(with|using|holding) %itemtype%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]direction",
                    "valueClass": "ch.njol.skript.util.Direction"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a user clicks on a block, an entity or air with or without an item in their hand.",
                "Please note that rightclick events with an empty hand while not looking at a block are not sent to the server, so there's no way to detect them."
            ],
            "examples": [
                "on click:",
                "on rightclick holding a fishing rod:",
                "on leftclick on a stone or obsidian:",
                "on rightclick on a creeper:",
                "on click with a sword:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerInteractEvent",
                "org.bukkit.event.player.PlayerInteractEntityEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Command",
            "id": 950394699,
            "patterns": [
                "command [%-string%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]commandsender",
                    "valueClass": "org.bukkit.command.CommandSender"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player enters a command (not neccessarily a Skript command)."
            ],
            "examples": [
                "on command:",
                "on command \"/stop\":",
                "on command \"pm Njol \":"
            ],
            "since": "2.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerCommandPreprocessEvent",
                "org.bukkit.event.server.ServerCommandEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Damage",
            "id": -1339126929,
            "patterns": [
                "damag(e|ing) [of %entitydata%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]damagecause",
                    "valueClass": "org.bukkit.event.entity.EntityDamageEvent$DamageCause"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when an entity receives damage, e.g. by an attack from another entity, lava, fire, drowning, fall, suffocation, etc."
            ],
            "examples": [
                "on damage:",
                "on damage of a player:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.EntityDamageEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Death",
            "id": 95457908,
            "patterns": [
                "death [of %entitydatas%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]projectile",
                    "valueClass": "org.bukkit.entity.Projectile"
                },
                {
                    "valueName": "[event-]damagecause",
                    "valueClass": "org.bukkit.event.entity.EntityDamageEvent$DamageCause"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a living entity (including players) dies."
            ],
            "examples": [
                "on death:",
                "on death of player:",
                "on death of a wither or ender dragon:",
                "\tbroadcast \"A %entity% has been slain in %world%!\""
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.EntityDeathEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Spawn",
            "id": 109638523,
            "patterns": [
                "spawn[ing] [of %entitydatas%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]spawnreason",
                    "valueClass": "org.bukkit.event.entity.CreatureSpawnEvent$SpawnReason"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when an creature spawns."
            ],
            "examples": [
                "on spawn of a zombie:",
                "on spawn of an ender dragon:",
                "\tbroadcast \"A dragon has been sighted in %world%!\""
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.CreatureSpawnEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Enderman/Sheep/Silverfish",
            "id": 36079278,
            "patterns": [
                "enderman pickup",
                "enderman place",
                "sheep eat",
                "silverfish enter",
                "silverfish exit"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when an enderman places or picks up a block, a sheep eats grass or a silverfish boops into/out of a block respectively."
            ],
            "examples": [
                "on sheep eat:",
                "\tkill entity",
                "\tbroadcast \"A sheep stole some grass!\""
            ],
            "since": "<i>unknown</i>",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.EntityChangeBlockEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Target",
            "id": -880905839,
            "patterns": [
                "[entity] target",
                "[entity] un[-]target"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a mob starts/stops following/attacking another entity, usually a player."
            ],
            "examples": [
                "on entity target:",
                "\ttarget is a player"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.EntityTargetEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Experience Spawn",
            "id": 1358526566,
            "patterns": [
                "[e]xp[erience] [orb] spawn",
                "spawn of [a[n]] [e]xp[erience] [orb]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                },
                {
                    "valueName": "[event-]experience",
                    "valueClass": "ch.njol.skript.util.Experience"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called whenever experience is about to spawn. This is a helper event for easily being able to stop xp from spawning, as all you can currently do is cancel the event.",
                "Please note that it's impossible to detect xp orbs spawned by plugins (including Skript) with Bukkit, thus make sure that you have no such plugins if you don't want any xp orbs to spawn. (Many plugins that only change the experience dropped by blocks or entities will be detected without problems though)"
            ],
            "examples": [
                "on xp spawn:",
                "\tworld is \"minigame_world\"",
                "\tcancel event"
            ],
            "since": "2.0",
            "addonName": "Skript",
            "classNames": [
                "ch.njol.skript.events.bukkit.ExperienceSpawnEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Firework Explode",
            "id": -1943659799,
            "patterns": [
                "[a] firework explo(d(e|ing)|sion) [colo[u]red %-colors%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Firework"
                },
                {
                    "valueName": "[event-]fireworkeffect",
                    "valueClass": "org.bukkit.FireworkEffect"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a firework explodes."
            ],
            "examples": [
                "on firework explode",
                "on firework exploding colored red, light green and black",
                "on firework explosion coloured light green:",
                "\tbroadcast \"A firework colored %colors% was exploded at %location%!\""
            ],
            "since": "2.4",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.FireworkExplodeEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On First Join",
            "id": -161091239,
            "patterns": [
                "first (join|login)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player joins the server for the first time."
            ],
            "examples": [
                "on first join:",
                "\tbroadcast \"Welcome %player% to the server!\""
            ],
            "since": "1.3.7",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerJoinEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Gamemode Change",
            "id": -616402278,
            "patterns": [
                "game[ ]mode change [to %gamemode%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player's gamemode changes."
            ],
            "examples": [
                "on gamemode change:",
                "on gamemode change to adventure:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerGameModeChangeEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Grow",
            "id": 3181587,
            "patterns": [
                "grow [of (1¦%-structuretype%|2¦%-itemtype%)]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [
                {
                    "valueName": "past [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "former [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "futureEventValues": [
                {
                    "valueName": "future [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "latter [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "description": [
                "Called when a tree, giant mushroom or plant grows to next stage."
            ],
            "examples": [
                "on grow:",
                "on grow of a tree:",
                "on grow of a huge jungle tree:"
            ],
            "since": "1.0 (2.2-dev20 for plants)",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.world.StructureGrowEvent",
                "org.bukkit.event.block.BlockGrowEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Dispense",
            "id": 284885341,
            "patterns": [
                "dispens(e|ing) [[of] %itemtypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a dispenser dispenses an item."
            ],
            "examples": [
                "on dispense of iron block:",
                "\tsend \"that'd be 19.99 please!\""
            ],
            "since": "<i>unknown</i> (before 2.1)",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.BlockDispenseEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Item Spawn",
            "id": -1952123057,
            "patterns": [
                "item spawn[ing] [[of] %itemtypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called whenever an item stack is spawned in a world, e.g. as drop of a block or mob, a player throwing items out of their inventory, or a dispenser dispensing an item (not shooting it)."
            ],
            "examples": [
                "on item spawn of iron sword:",
                "\tbroadcast \"Someone dropped an iron sword!\""
            ],
            "since": "<i>unknown</i> (before 2.1)",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.ItemSpawnEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Drop",
            "id": 3092207,
            "patterns": [
                "[player] drop[ing] [[of] %itemtypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]itementity",
                    "valueClass": "org.bukkit.entity.Item"
                },
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player drops an item from their inventory."
            ],
            "examples": [
                "on drop:"
            ],
            "since": "<i>unknown</i> (before 2.1)",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerDropItemEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Craft",
            "id": 94921248,
            "patterns": [
                "[player] craft[ing] [[of] %itemtypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]slot",
                    "valueClass": "ch.njol.skript.util.slot.Slot"
                },
                {
                    "valueName": "[event-]inventoryaction",
                    "valueClass": "org.bukkit.event.inventory.InventoryAction"
                },
                {
                    "valueName": "[event-]clicktype",
                    "valueClass": "org.bukkit.event.inventory.ClickType"
                },
                {
                    "valueName": "[event-]inventory",
                    "valueClass": "org.bukkit.inventory.Inventory"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player crafts an item."
            ],
            "examples": [
                "on craft:"
            ],
            "since": "<i>unknown</i> (before 2.1)",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.inventory.CraftItemEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Prepare Craft",
            "id": 1536733416,
            "patterns": [
                "[player] (preparing|beginning) craft[ing] [[of] %itemtypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]slot",
                    "valueClass": "ch.njol.skript.util.slot.Slot"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called just before displaying crafting result to player. Note that setting the result item might or might not work due to Bukkit bugs."
            ],
            "examples": [
                "on preparing craft of torch:"
            ],
            "since": "2.2-Fixes-V10",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.inventory.PrepareItemCraftEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Pick Up",
            "id": -578030727,
            "patterns": [
                "[(player|1¦entity)] (pick[ ]up|picking up) [[of] %itemtypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]itementity",
                    "valueClass": "org.bukkit.entity.Item"
                },
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player/entity picks up an item. Please note that the item is still on the ground when this event is called."
            ],
            "examples": [
                "on pick up:",
                "on entity pickup of wheat:"
            ],
            "since": "<i>unknown</i> (before 2.1), 2.5 (entity)",
            "requiredPlugins": [
                "1.12.2+ for entity"
            ],
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerPickupItemEvent",
                "org.bukkit.event.entity.EntityPickupItemEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Consume",
            "id": 951516156,
            "patterns": [
                "[player] ((eat|drink)[ing]|consum(e|ing)) [[of] %itemtypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player is done eating/drinking something, e.g. an apple, bread, meat, milk or a potion."
            ],
            "examples": [
                "on consume:"
            ],
            "since": "2.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerItemConsumeEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Inventory Click",
            "id": -1042756379,
            "patterns": [
                "[player] inventory(-| )click[ing] [[at] %itemtypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]slot",
                    "valueClass": "ch.njol.skript.util.slot.Slot"
                },
                {
                    "valueName": "[event-]inventoryaction",
                    "valueClass": "org.bukkit.event.inventory.InventoryAction"
                },
                {
                    "valueName": "[event-]clicktype",
                    "valueClass": "org.bukkit.event.inventory.ClickType"
                },
                {
                    "valueName": "[event-]inventory",
                    "valueClass": "org.bukkit.inventory.Inventory"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when clicking on inventory slot."
            ],
            "examples": [
                "on inventory click:",
                "\tif event-item is stone:",
                "\t\tgive player 1 stone",
                "\t\tremove 20$ from player's balance"
            ],
            "since": "2.2-Fixes-V10",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.inventory.InventoryClickEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Item Despawn",
            "id": 184282734,
            "patterns": [
                "(item[ ][stack]|[item] %-itemtypes%) despawn[ing]",
                "[item[ ][stack]] despawn[ing] [[of] %-itemtypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]itementity",
                    "valueClass": "org.bukkit.entity.Item"
                },
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when an item is about to be despawned from the world, usually 5 minutes after it was dropped."
            ],
            "examples": [
                "on item despawn of diamond:",
                "\tsend \"Not my precious!\"",
                "\tcancel event"
            ],
            "since": "2.2-dev35",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.ItemDespawnEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Item Merge",
            "id": -1957976052,
            "patterns": [
                "(item[ ][stack]|[item] %-itemtypes%) merg(e|ing)",
                "item[ ][stack] merg(e|ing) [[of] %-itemtypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]itementity",
                    "valueClass": "org.bukkit.entity.Item"
                },
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when dropped items merge into a single stack."
            ],
            "examples": [
                "on item merge of gold blocks:",
                "\tcancel event"
            ],
            "since": "2.2-dev35",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.ItemMergeEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Level Change",
            "id": 961296587,
            "patterns": [
                "[player] level (change|1¦up|-1¦down)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player's level changes, e.g. by gathering experience or by enchanting something."
            ],
            "examples": [
                "on level change:"
            ],
            "since": "1.0, 2.4 (level up/down)",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerLevelChangeEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Move On",
            "id": 1243568397,
            "patterns": [
                "(step|walk)[ing] (on|over) %*itemtypes%"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player moves onto a certain type of block. Please note that using this event can cause lag if there are many players online."
            ],
            "examples": [
                "on walking on dirt or grass:",
                "on stepping on stone:"
            ],
            "since": "2.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerMoveEvent"
            ],
            "cancellable": true
        },
        {
            "name": "Periodical",
            "id": 384952326,
            "patterns": [
                "every %timespan%"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "An event that is called periodically."
            ],
            "examples": [
                "every 2 seconds:",
                "every minecraft hour:",
                "every tick: # can cause lag depending on the code inside the event",
                "every minecraft days:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "ch.njol.skript.events.bukkit.ScheduledNoWorldEvent"
            ],
            "cancellable": false
        },
        {
            "name": "Periodical",
            "id": 384952326,
            "patterns": [
                "every %timespan% in [world[s]] %worlds%"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "An event that is called periodically."
            ],
            "examples": [
                "every 2 seconds in \"world\":",
                "every minecraft hour in \"flatworld\":",
                "every tick in \"world\": # can cause lag depending on the code inside the event",
                "every minecraft days in \"plots\":"
            ],
            "since": "1.0",
            "documentationID": "eventperiodical",
            "addonName": "Skript",
            "classNames": [
                "ch.njol.skript.events.bukkit.ScheduledEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Block Growth",
            "id": -946384455,
            "patterns": [
                "(plant|crop|block) grow[(th|ing)] [[of] %itemtypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [
                {
                    "valueName": "past [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "former [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "futureEventValues": [
                {
                    "valueName": "future [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "latter [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "description": [
                "Called when a crop grows. Alternative to new form of generic grow event."
            ],
            "examples": [
                "on crop growth:"
            ],
            "since": "2.2-Fixes-V10",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.BlockGrowEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Pressure Plate / Trip",
            "id": 918020584,
            "patterns": [
                "(trip|[step[ping] on] [a] tripwire)",
                "[step[ping] on] [a] [pressure] plate"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]direction",
                    "valueClass": "ch.njol.skript.util.Direction"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player steps on a pressure plate or tripwire respectively."
            ],
            "examples": [
                "on step on pressure plate:"
            ],
            "since": "1.0 (pressure plate), 1.4.4 (tripwire)",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerInteractEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Resource Pack Request Response",
            "id": 247431142,
            "patterns": [
                "resource pack [request] %resourcepackstates%",
                "resource pack [request] response"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player takes action on a resource pack request sent via the ",
                "send resource pack effect. ",
                "The resource pack condition can be used ",
                "to check the resource pack state.",
                "",
                "This event will be triggered once when the player accepts or declines the resource pack request, ",
                "and once when the resource pack is successfully installed or failed to download."
            ],
            "examples": [
                "on resource pack request response:",
                "\tif the resource pack was declined or failed to download:",
                "",
                "on resource pack deny:",
                "\tkick the player due to \"You have to install the resource pack to play in this server!\""
            ],
            "since": "2.4",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerResourcePackStatusEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Script Load/Unload",
            "id": 1659209561,
            "patterns": [
                "[script] (load|init|enable)",
                "[script] (unload|stop|disable)"
            ],
            "currentEventValues": [],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called directly after the trigger is loaded, or directly before the whole script is unloaded."
            ],
            "examples": [
                "on load:",
                "\tset {running::%script%} to true",
                "on unload:",
                "\tset {running::%script%} to false"
            ],
            "since": "2.0",
            "addonName": "Skript",
            "classNames": [
                "ch.njol.skript.events.bukkit.ScriptEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Server Start/Stop",
            "id": -862782104,
            "patterns": [
                "(0¦server|1¦skript) (start|load|enable)",
                "(0¦server|1¦skript) (stop|unload|disable)"
            ],
            "currentEventValues": [],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when the server starts or stops (actually, when Skript starts or stops, so a /reload will trigger these events as well)."
            ],
            "examples": [
                "on skript start:",
                "on server stop:"
            ],
            "since": "2.0",
            "addonName": "Skript",
            "classNames": [
                "ch.njol.skript.events.bukkit.SkriptStartEvent",
                "ch.njol.skript.events.bukkit.SkriptStopEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Weather Change",
            "id": -920797605,
            "patterns": [
                "weather change [to %weathertypes%]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a world's weather changes."
            ],
            "examples": [
                "on weather change:",
                "on weather change to sunny:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.weather.WeatherChangeEvent",
                "org.bukkit.event.weather.ThunderChangeEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Can Build Check",
            "id": 1173989896,
            "patterns": [
                "[block] can build check"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [
                {
                    "valueName": "past [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "former [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "futureEventValues": [
                {
                    "valueName": "future [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "latter [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "description": [
                "Called when a player rightclicks on a block while holding a block or a placeable item. You can either cancel the event to prevent the block from being built, or uncancel it to allow it.",
                "Please note that the data value of the block to be placed is not available in this event, only its ID."
            ],
            "examples": [
                "on block can build check:",
                "\tcancel event"
            ],
            "since": "1.0 (basic), 2.0 ([un]cancellable)",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.BlockCanBuildEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Block Damage",
            "id": -1048052895,
            "patterns": [
                "block damag(ing|e)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player starts to break a block. You can usually just use the leftclick event for this."
            ],
            "examples": [
                "on block damaging:",
                "\tif block is log:",
                "\t\tsend \"You can't break the holy log!\""
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.BlockDamageEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Flow",
            "id": 3146030,
            "patterns": [
                "[block] flow[ing]",
                "block mov(e|ing)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a blocks flows or teleports to another block. This not only applies to water and lava, but teleporting dragon eggs as well."
            ],
            "examples": [
                "on block flow:",
                "\tif event-block is water:",
                "\t\tbroadcast \"Build more dams! It's starting to get wet in here\""
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.BlockFromToEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Ignition",
            "id": -1515173395,
            "patterns": [
                "[block] ignit(e|ion)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a block starts burning, i.e. a fire block is placed next to it and this block is flammable.",
                "The burn event will be called when the block is about do be destroyed by the fire."
            ],
            "examples": [
                "on block ignite:",
                "\tif event-block is a ladder:",
                "\t\tcancel event"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.BlockIgniteEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Physics",
            "id": -586095033,
            "patterns": [
                "[block] physics"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a physics check is done on a block. By cancelling this event you can prevent some things from happening, e.g. sand falling, dirt turning into grass, torches dropping if their supporting block is destroyed, etc.Please note that using this event might cause quite some lag since it gets called extremely often."
            ],
            "examples": [
                "# prevents sand from falling",
                "on block physics:",
                "\tblock is sand",
                "\tcancel event"
            ],
            "since": "1.4.6",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.BlockPhysicsEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Piston Extend",
            "id": 1446731936,
            "patterns": [
                "piston extend[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a piston is about to extend."
            ],
            "examples": [
                "on piston extend:",
                "\tbroadcast \"A piston is extending!\""
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.BlockPistonExtendEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Piston Retract",
            "id": 8084027,
            "patterns": [
                "piston retract[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a piston is about to retract."
            ],
            "examples": [
                "on piston retract:",
                "\tbroadcast \"A piston is retracting!\""
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.BlockPistonRetractEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Redstone",
            "id": -766840204,
            "patterns": [
                "redstone [current] [chang(e|ing)]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when the redstone current of a block changes. This event is of not much use yet."
            ],
            "examples": [
                "on redstone change:",
                "\tsend \"someone is using redstone\" to console"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.BlockRedstoneEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Spread",
            "id": -895684237,
            "patterns": [
                "spread[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [
                {
                    "valueName": "past [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "former [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "futureEventValues": [
                {
                    "valueName": "future [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "latter [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "description": [
                "Called when a new block forms as a result of a block that can spread, e.g. water or mushrooms."
            ],
            "examples": [
                "on spread:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.BlockSpreadEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Chunk Load",
            "id": -1525753992,
            "patterns": [
                "chunk load[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]chunk",
                    "valueClass": "org.bukkit.Chunk"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a chunk loads. The chunk might or might not contain mobs when it's loaded."
            ],
            "examples": [
                "on chunk load:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.world.ChunkLoadEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Chunk Generate",
            "id": 1215598343,
            "patterns": [
                "chunk (generat|populat)(e|ing)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]chunk",
                    "valueClass": "org.bukkit.Chunk"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called after a new chunk was generated."
            ],
            "examples": [
                "on chunk generate:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.world.ChunkPopulateEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Chunk Unload",
            "id": -1408658159,
            "patterns": [
                "chunk unload[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]chunk",
                    "valueClass": "org.bukkit.Chunk"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a chunk is unloaded due to not being near any player. Cancel the event to force the server to keep the chunk loaded and thus keep simulating the chunk (e.g. physics, plant growth, minecarts, etc. will keep working and won't freeze)."
            ],
            "examples": [
                "on chunk unload:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.world.ChunkUnloadEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Creeper Power",
            "id": -641473804,
            "patterns": [
                "creeper power"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a creeper is struck by lighting and gets powered. Cancel the event to prevent the creeper from being powered."
            ],
            "examples": [
                "on creeper power:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.CreeperPowerEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Zombie Break Door",
            "id": 1675818663,
            "patterns": [
                "zombie break[ing] [a] [wood[en]] door"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a zombie is done breaking a wooden door. Can be cancelled to prevent the zombie from breaking the door."
            ],
            "examples": [
                "on zombie breaking a wood door:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.EntityBreakDoorEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Combust",
            "id": 950086389,
            "patterns": [
                "combust[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when an entity is set on fire, e.g. by fire or lava, a fireball, or by standing in direct sunlight (zombies, skeletons)."
            ],
            "examples": [
                "on combust:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.EntityCombustEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Explode",
            "id": -1309148959,
            "patterns": [
                "explo(d(e|ing)|sion)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when an entity (a primed TNT or a creeper) explodes."
            ],
            "examples": [
                "on explosion:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.EntityExplodeEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Portal Enter",
            "id": 971698501,
            "patterns": [
                "entering [a] portal",
                "portal enter[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player enters a nether portal and the swirly animation starts to play."
            ],
            "examples": [
                "on portal enter:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.EntityPortalEnterEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Heal",
            "id": 3198440,
            "patterns": [
                "heal[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when an entity is healed, e.g. by eating (players), being fed (pets), or by the effect of a potion of healing (overworld mobs) or harm (nether mobs)."
            ],
            "examples": [
                "on heal:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.EntityRegainHealthEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Tame",
            "id": 3552453,
            "patterns": [
                "[entity] tam(e|ing)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player tames a wolf or ocelot. Can be cancelled to prevent the entity from being tamed."
            ],
            "examples": [
                "on tame:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.EntityTameEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Explosion Prime",
            "id": 1980818645,
            "patterns": [
                "explosion prime"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when an explosive is primed, i.e. an entity will explode shortly. Creepers can abort the explosion if the player gets too far away, while TNT will explode for sure after a short time."
            ],
            "examples": [
                "on explosion prime:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.ExplosionPrimeEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Hunger Meter Change",
            "id": 557309746,
            "patterns": [
                "(food|hunger) (level|met(er|re)|bar) chang(e|ing)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when the hunger bar of a player changes, i.e. either increases by eating or decreases over time."
            ],
            "examples": [
                "on food bar change:"
            ],
            "since": "1.4.4",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.FoodLevelChangeEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Fuel Burn",
            "id": 699894456,
            "patterns": [
                "fuel burn[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a furnace burns an item from its fuel slot."
            ],
            "examples": [
                "on fuel burning:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.inventory.FurnaceBurnEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Smelt",
            "id": 109552659,
            "patterns": [
                "[ore] smelt[ing]",
                "smelt[ing] of ore"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a furnace smelts an item in its ore slot."
            ],
            "examples": [
                "on smelt:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.inventory.FurnaceSmeltEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Leaves Decay",
            "id": 1268489815,
            "patterns": [
                "leaves decay[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a leaf block decays due to not being connected to a tree."
            ],
            "examples": [
                "on leaves decay:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.LeavesDecayEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Lightning Strike",
            "id": 1613247175,
            "patterns": [
                "lightning [strike]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when lightning strikes."
            ],
            "examples": [
                "on lightning:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.weather.LightningStrikeEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Pig Zap",
            "id": -574668808,
            "patterns": [
                "pig[ ]zap"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a pig is stroke by lightning and transformed into a zombie pigman. Cancel the event to prevent the transformation."
            ],
            "examples": [
                "on pig zap:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.PigZapEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Bed Enter",
            "id": 265798042,
            "patterns": [
                "[player] enter[ing] [a] bed",
                "bed enter[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player starts sleeping."
            ],
            "examples": [
                "on bed enter:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerBedEnterEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Bed Leave",
            "id": 271976825,
            "patterns": [
                "[player] leav(e|ing) [a] bed",
                "bed leav(e|ing)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player leaves a bed."
            ],
            "examples": [
                "on player leaving a bed:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerBedLeaveEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Bucket Empty",
            "id": 194026168,
            "patterns": [
                "[player] empty[ing] [a] bucket",
                "bucket empty[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [
                {
                    "valueName": "past [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "former [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "futureEventValues": [
                {
                    "valueName": "future [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "latter [event-]block",
                    "valueClass": "org.bukkit.block.Block"
                }
            ],
            "description": [
                "Called when a player empties a bucket. You can also use the place event with a check for water or lava."
            ],
            "examples": [
                "on bucket empty:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerBucketEmptyEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Bucket fill",
            "id": 283379384,
            "patterns": [
                "[player] fill[ing] [a] bucket",
                "bucket fill[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player fills a bucket."
            ],
            "examples": [
                "on player filling a bucket:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerBucketFillEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Throwing of an Egg",
            "id": -365313256,
            "patterns": [
                "[player] egg throw",
                "throw[ing] [of] [an] egg"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player throws an egg. You can just use the shoot event in most cases, as this event is intended to support changing the hatched mob and its chance to hatch, but Skript does not yet support that."
            ],
            "examples": [
                "on throw of an egg:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerEggThrowEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Fishing",
            "id": -848436598,
            "patterns": [
                "[player] fish[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player fishes something. This is not of much use yet."
            ],
            "examples": [
                "on fish:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerFishEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Item Break",
            "id": -1967760173,
            "patterns": [
                "[player] break[ing] (a|the|) tool",
                "[player] tool break[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player breaks their tool because its damage reached the maximum value.",
                "This event cannot be cancelled."
            ],
            "examples": [
                "on tool break:"
            ],
            "since": "2.1.1",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerItemBreakEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Item Damage",
            "id": -829226469,
            "patterns": [
                "item damag(e|ing)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when an item is damaged. Most tools are damaged by using them; armor is damaged when the wearer takes damage."
            ],
            "examples": [
                "on item damage:",
                "\tcancel event"
            ],
            "since": "2.5",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerItemDamageEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Tool Change",
            "id": -798282697,
            "patterns": [
                "[player['s]] (tool|item held|held item) chang(e|ing)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called whenever a player changes their held item by selecting a different slot (e.g. the keys 1-9 or the mouse wheel), not by dropping or replacing the item in the current slot."
            ],
            "examples": [
                "on player's held item change:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerItemHeldEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Join",
            "id": 3267882,
            "patterns": [
                "[player] (login|logging in|join[ing])"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when the player joins the server. The player is already in a world when this event is called, so if you want to prevent players from joining you should prefer on connect over this event."
            ],
            "examples": [
                "on join:",
                "\tmessage \"Welcome on our awesome server!\"",
                "\tbroadcast \"%player% just joined the server!\""
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerJoinEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Connect",
            "id": 951351530,
            "patterns": [
                "[player] connect[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when the player connects to the server. This event is called before the player actually joins the server, so if you want to prevent players from joining you should prefer this event over on join."
            ],
            "examples": [
                "on connect:",
                "\tplayer doesn't have permission \"VIP\"",
                "\tnumber of players is greater than 15",
                "\tkick the player due to \"The last 5 slots are reserved for VIP players.\""
            ],
            "since": "2.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerLoginEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Kick",
            "id": 3291718,
            "patterns": [
                "[player] (kick|being kicked)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player is kicked from the server. You can change the kick message or cancel the event entirely."
            ],
            "examples": [
                "on kick:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerKickEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Portal",
            "id": -982480788,
            "patterns": [
                "[player] portal"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]teleportcause",
                    "valueClass": "org.bukkit.event.player.PlayerTeleportEvent$TeleportCause"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player uses a nether or end portal. Cancel the event to prevent the player from teleporting."
            ],
            "examples": [
                "on player portal:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerPortalEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Quit",
            "id": 3482191,
            "patterns": [
                "(quit[ting]|disconnect[ing]|log[ ]out|logging out)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player leaves the server."
            ],
            "examples": [
                "on quit:",
                "on disconnect:"
            ],
            "since": "1.0 (simple disconnection)",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerQuitEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Respawn",
            "id": 1097387304,
            "patterns": [
                "[player] respawn[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player respawns. You should prefer this event over the death event as the player is technically alive when this event is called."
            ],
            "examples": [
                "on respawn:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerRespawnEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Teleport",
            "id": -1360201941,
            "patterns": [
                "[player] teleport[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]teleportcause",
                    "valueClass": "org.bukkit.event.player.PlayerTeleportEvent$TeleportCause"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called whenever a player is teleported, either by a nether/end portal or other means (e.g. by plugins)."
            ],
            "examples": [
                "on teleport:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerTeleportEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Sneak Toggle",
            "id": -691649825,
            "patterns": [
                "[player] sneak toggl(e|ing)",
                "[player] toggl(e|ing) sneak"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player starts or stops sneaking. Use is sneaking to get whether the player was sneaking before the event was called."
            ],
            "examples": [
                "# make players that stop sneaking jump",
                "on sneak toggle:",
                "\tplayer was sneaking",
                "\tpush the player upwards at speed 0.5"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerToggleSneakEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Sprint Toggle",
            "id": 933889305,
            "patterns": [
                "[player] sprint toggl(e|ing)",
                "[player] toggl(e|ing) sprint"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player starts or stops sprinting. Use is sprinting to get whether the player was sprinting before the event was called."
            ],
            "examples": [
                "on sprint toggle:",
                "\tplayer is not sprinting",
                "\tsend \"Run!\""
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerToggleSprintEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Portal Create",
            "id": 3867695,
            "patterns": [
                "portal creat(e|ion)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a portal is created, either by a player or mob lighting an obsidian frame on fire, or by a nether portal creating its teleportation target in the nether/overworld.",
                "Please note that it's not possible to use the player in this event."
            ],
            "examples": [
                "on portal create:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.world.PortalCreateEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Projectile Hit",
            "id": 1040740413,
            "patterns": [
                "projectile hit"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]projectile",
                    "valueClass": "org.bukkit.entity.Projectile"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a projectile hits an entity or a block.",
                "Use the damage event with a check for a projectile to be able to use the entity that got hit in the case when the projectile hit a living entity.",
                "A damage event will even be fired if the damage is 0, e.g. when throwing snowballs at non-nether mobs."
            ],
            "examples": [
                "on projectile hit:",
                "\tevent-projectile is arrow",
                "\tdelete event-projectile"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.ProjectileHitEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Shoot",
            "id": 109413407,
            "patterns": [
                "[projectile] shoot"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]projectile",
                    "valueClass": "org.bukkit.entity.Projectile"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called whenever a projectile is shot. Use the shooter expression to get who shot the projectile."
            ],
            "examples": [
                "on shoot:",
                "\tif projectile is an arrow:",
                "\t\tsend \"you shot an arrow!\" to shooter"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.ProjectileLaunchEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Sign Change",
            "id": -1351830414,
            "patterns": [
                "[player] (chang[e]|edit)[ing] [a] sign",
                "sign (chang[e]|edit)[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "As signs are placed empty, this event is called when a player is done editing a sign."
            ],
            "examples": [
                "on sign change:",
                "\tline 2 is empty",
                "\tset line 1 to \"<red>%line 1%\""
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.SignChangeEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Spawn Change",
            "id": 126307572,
            "patterns": [
                "[world] spawn change"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when the spawn point of a world changes."
            ],
            "examples": [
                "on spawn change:",
                "\tbroadcast \"someone changed the spawn!\""
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.world.SpawnChangeEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Vehicle Create",
            "id": -1177098897,
            "patterns": [
                "creat(e|ing|ion of) [a] vehicle",
                "vehicle create"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Vehicle"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a new vehicle is created, e.g. when a player places a boat or minecart."
            ],
            "examples": [
                "on vehicle create:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.vehicle.VehicleCreateEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Vehicle Damage",
            "id": -1163931678,
            "patterns": [
                "damag(e|ing) [a] vehicle",
                "vehicle damage"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Vehicle"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a vehicle gets damage. Too much damage will destroy the vehicle."
            ],
            "examples": [
                "on vehicle damage:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.vehicle.VehicleDamageEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Vehicle Destroy",
            "id": -1601508889,
            "patterns": [
                "destr(oy[ing]|uction of) [a] vehicle",
                "vehicle destroy"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Vehicle"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a vehicle is destroyed. Any passenger will be ejected and the vehicle might drop some item(s)."
            ],
            "examples": [
                "on vehicle destroy:",
                "\tcancel event"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.vehicle.VehicleDestroyEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Vehicle Enter",
            "id": 1487792133,
            "patterns": [
                "enter[ing] [a] vehicle",
                "vehicle enter"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Vehicle"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when an entity enters a vehicle, either deliberately (players) or by falling into them (mobs)."
            ],
            "examples": [
                "on vehicle enter:",
                "\tentity is a player",
                "\tcancel event"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.vehicle.VehicleEnterEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Vehicle Exit",
            "id": -2030207407,
            "patterns": [
                "exit[ing] [a] vehicle",
                "vehicle exit"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]livingentity",
                    "valueClass": "org.bukkit.entity.LivingEntity"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Vehicle"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when an entity exits a vehicle."
            ],
            "examples": [
                "on vehicle exit:",
                "\tif event-entity is a spider:",
                "\t\tkill event-entity"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.vehicle.VehicleExitEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Entity Mount",
            "id": 1071566013,
            "patterns": [
                "mount[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when entity starts riding another."
            ],
            "examples": [
                "on mount:",
                "\tcancel event"
            ],
            "since": "2.2-dev13b",
            "addonName": "Skript",
            "classNames": [
                "org.spigotmc.event.entity.EntityMountEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Entity Dismount",
            "id": -1062511321,
            "patterns": [
                "dismount[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when an entity dismounts."
            ],
            "examples": [
                "on dismount:",
                "\tkill event-entity"
            ],
            "since": "2.2-dev13b",
            "addonName": "Skript",
            "classNames": [
                "org.spigotmc.event.entity.EntityDismountEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On World Init",
            "id": 457665949,
            "patterns": [
                "world init[ialization]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a world is initialised. As all default worlds are initialised before any scripts are loaded, this event is only called for newly created worlds.",
                "World management plugins might change the behaviour of this event though."
            ],
            "examples": [
                "on world init:"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.world.WorldInitEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On World Load",
            "id": 457756019,
            "patterns": [
                "world load[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a world is loaded. As with the world init event, this event will not be called for the server's default world(s)."
            ],
            "examples": [
                "on world load:",
                "\tsend \"World is loading...\" to console"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.world.WorldLoadEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On World Save",
            "id": 457951754,
            "patterns": [
                "world sav(e|ing)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a world is saved to disk. Usually all worlds are saved simultaneously, but world management plugins could change this."
            ],
            "examples": [
                "on world saving:",
                "\tbroadcast \"World has been saved!\""
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.world.WorldSaveEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On World Unload",
            "id": 2073950284,
            "patterns": [
                "world unload[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a world is unloaded. This event might never be called if you don't have a world management plugin."
            ],
            "examples": [
                "on world unload:",
                "\tcancel event"
            ],
            "since": "1.0",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.world.WorldUnloadEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Gliding State Change",
            "id": -1819779813,
            "patterns": [
                "(gliding state change|toggl(e|ing) gliding)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when an entity toggles glider on or off, or when server toggles gliding state of an entity forcibly."
            ],
            "examples": [
                "on toggling gliding:",
                "\tcancel the event # bad idea, but you CAN do it!"
            ],
            "since": "2.2-dev21",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.EntityToggleGlideEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On AoE Cloud Effect",
            "id": 1851882531,
            "patterns": [
                "(area|AoE) [cloud] effect"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]potioneffecttype",
                    "valueClass": "org.bukkit.potion.PotionEffectType"
                },
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when area effect cloud applies its potion effect. This happens every 5 ticks by default."
            ],
            "examples": [
                "on area cloud effect:"
            ],
            "since": "2.2-dev21",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.AreaEffectCloudApplyEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Sheep Regrow Wool",
            "id": -52933206,
            "patterns": [
                "sheep [re]grow[ing] wool"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when sheep regrows its sheared wool back."
            ],
            "examples": [
                "on sheep grow wool:",
                "\tcancel event"
            ],
            "since": "2.2-dev21",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.SheepRegrowWoolEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Inventory Open",
            "id": -33276083,
            "patterns": [
                "inventory open[ed]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]inventory",
                    "valueClass": "org.bukkit.inventory.Inventory"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when an inventory is opened for player."
            ],
            "examples": [
                "on inventory open:",
                "\tclose player's inventory"
            ],
            "since": "2.2-dev21",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.inventory.InventoryOpenEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Inventory Close",
            "id": -1042750123,
            "patterns": [
                "inventory clos(ing|e[d])"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]inventory",
                    "valueClass": "org.bukkit.inventory.Inventory"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when player's currently viewed inventory is closed."
            ],
            "examples": [
                "on inventory close:",
                "\tif player's location is {location}:",
                "\t\tsend \"You exited the shop!\""
            ],
            "since": "2.2-dev21",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.inventory.InventoryCloseEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Slime Split",
            "id": -2077980957,
            "patterns": [
                "slime split[ting]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a slime splits. Usually this happens when a big slime dies."
            ],
            "examples": [
                "on slime split:"
            ],
            "since": "2.2-dev26",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.SlimeSplitEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Resurrect Attempt",
            "id": -276309201,
            "patterns": [
                "[entity] resurrect[ion] [attempt]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when an entity dies, always. If they are not holding a totem, this is cancelled - you can, however, uncancel it."
            ],
            "examples": [
                "on resurrect attempt:",
                "\tentity is player",
                "\tentity has permission \"admin.undying\"",
                "\tuncancel the event"
            ],
            "since": "2.2-dev28",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.EntityResurrectEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Player World Change",
            "id": -35229285,
            "patterns": [
                "[player] world chang(ing|e[d])"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a player enters a world. Does not work with other entities!"
            ],
            "examples": [
                "on player world change:",
                "\tworld is \"city\"",
                "\tsend \"Welcome to the City!\""
            ],
            "since": "2.2-dev28",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerChangedWorldEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Flight Toggle",
            "id": 1577342467,
            "patterns": [
                "[player] flight toggl(e|ing)",
                "[player] toggl(e|ing) flight"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a players stops/starts flying."
            ],
            "examples": [
                "on flight toggle:",
                "\tif {game::%player%::playing} exists:",
                "\t\tcancel event"
            ],
            "since": "2.2-dev36",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerToggleFlightEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Language Change",
            "id": -1570731401,
            "patterns": [
                "[player] (language|locale) chang(e|ing)",
                "[player] chang(e|ing) (language|locale)"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called after a player changed their language in the game settings. You can use the language expression to get the current language of the player.",
                "This event requires Minecraft 1.12+."
            ],
            "examples": [
                "on language change:",
                "\tif player's language starts with \"en\":",
                "\t\tsend \"Hello!\""
            ],
            "since": "2.3",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerLocaleChangeEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Jump",
            "id": 3273774,
            "patterns": [
                "[player] jump[ing]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called whenever a player jumps.",
                "This event requires PaperSpigot."
            ],
            "examples": [
                "on jump:",
                "\tevent-player does not have permission \"jump\"",
                "\tcancel event"
            ],
            "since": "2.3",
            "addonName": "Skript",
            "classNames": [
                "com.destroystokyo.paper.event.player.PlayerJumpEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Hand Item Swap",
            "id": -1056211089,
            "patterns": [
                "swap[ping of] [(hand|held)] item[s]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called whenever a player swaps the items in their main- and offhand slots.",
                "Works also when one or both of the slots are empty.",
                "The event is called before the items are actually swapped,",
                "so when you use the player's tool or player's offtool expressions,",
                "they will return the values before the swap -",
                "this enables you to cancel the event before anything happens."
            ],
            "examples": [
                "on swap hand items:",
                "\tevent-player's tool is a diamond sword",
                "\tcancel event"
            ],
            "since": "2.3",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerSwapHandItemsEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Server List Ping",
            "id": 41381495,
            "patterns": [
                "server [list] ping"
            ],
            "currentEventValues": [],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a server list ping is coming in, generally when a Minecraft client pings the server to show its information in the server list.",
                "The IP expression can be used to get the IP adress of the pinger.",
                "This event can be cancelled on PaperSpigot 1.12.2+ only and this means the player will see the server as offline (but still can join).",
                "",
                "Also you can use MOTD, Max Players, Online Players Count, Protocol Version, Version String, Hover List and Server Icon expressions, and Player Info Visibility and Hide Player from Server List effects to modify the server list."
            ],
            "examples": [
                "on server list ping:",
                "\tset the motd to \"Welcome %{player-by-IP::%ip%}%! Join now!\" if {player-by-IP::%ip%} is set, else \"Join now!\"",
                "\tset the fake max players count to (online players count + 1)",
                "\tset the shown icon to a random server icon out of {server-icons::*}"
            ],
            "since": "2.3",
            "addonName": "Skript",
            "classNames": [
                "com.destroystokyo.paper.event.server.PaperServerListPingEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Swim Toggle",
            "id": -377471765,
            "patterns": [
                "[entity] swim toggl(e|ing)",
                "[entity] toggl(e|ing) swim"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]entity",
                    "valueClass": "org.bukkit.entity.Entity"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when an entity swims or stops swimming."
            ],
            "examples": [
                "on swim toggle:",
                "\tevent-entity does not have permission \"swim\"",
                "\tcancel event"
            ],
            "since": "2.3",
            "requiredPlugins": [
                "1.13 or newer"
            ],
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.entity.EntityToggleSwimEvent"
            ],
            "cancellable": true
        },
        {
            "name": "On Riptide",
            "id": 1209259599,
            "patterns": [
                "[use of] riptide [enchant[ment]]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when the player activates the riptide enchantment, using their trident to propel them through the air.",
                "Note: the riptide action is performed client side, so manipulating the player in this event may have undesired effects."
            ],
            "examples": [
                "on riptide:",
                "\tsend \"You are riptiding!\""
            ],
            "since": "2.5",
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.player.PlayerRiptideEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Armor Change",
            "id": 396729008,
            "patterns": [
                "[player] armor change[d]"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]itemtype",
                    "valueClass": "ch.njol.skript.aliases.ItemType"
                },
                {
                    "valueName": "[event-]player",
                    "valueClass": "org.bukkit.entity.Player"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when armor pieces of a player are changed."
            ],
            "examples": [
                "on armor change:",
                "\tsend \"You equipped %event-item%!\""
            ],
            "since": "2.5",
            "requiredPlugins": [
                "Paper"
            ],
            "addonName": "Skript",
            "classNames": [
                "com.destroystokyo.paper.event.player.PlayerArmorChangeEvent"
            ],
            "cancellable": false
        },
        {
            "name": "On Sponge Absorb",
            "id": -113457614,
            "patterns": [
                "sponge absorb"
            ],
            "currentEventValues": [
                {
                    "valueName": "[event-]block",
                    "valueClass": "org.bukkit.block.Block"
                },
                {
                    "valueName": "[event-]world",
                    "valueClass": "org.bukkit.World"
                },
                {
                    "valueName": "[event-]location",
                    "valueClass": "org.bukkit.Location"
                }
            ],
            "pastEventValues": [],
            "futureEventValues": [],
            "description": [
                "Called when a sponge absorbs blocks."
            ],
            "examples": [
                "on sponge absorb:",
                "\tloop absorbed blocks:",
                "\t\tbroadcast \"%loop-block% was absorbed by a sponge\"!"
            ],
            "since": "2.5",
            "requiredPlugins": [
                "Minecraft 1.13 or newer"
            ],
            "addonName": "Skript",
            "classNames": [
                "org.bukkit.event.block.SpongeAbsorbEvent"
            ],
            "cancellable": true
        }
    ],
    "effects": [
        {
            "patterns": [
                "(wait|halt) [for] %timespan%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.Delay"
        },
        {
            "patterns": [
                "send [the] action bar [with text] %string% to %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffActionBar"
        },
        {
            "patterns": [
                "(IP(-| )unban|un[-]IP[-]ban) %players%",
                "IP(-| )ban %players% [(by reason of|because [of]|on account of|due to) %-string%] [for %-timespan%]",
                "ban %players% by IP [(by reason of|because [of]|on account of|due to) %-string%] [for %-timespan%]",
                "ban %strings/offlineplayers% [(by reason of|because [of]|on account of|due to) %-string%] [for %-timespan%]",
                "unban %players% by IP",
                "unban %strings/offlineplayers%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffBan"
        },
        {
            "patterns": [
                "break %blocks% [naturally] [using %-itemtype%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffBreakNaturally"
        },
        {
            "patterns": [
                "broadcast %strings% [(to|in) %-worlds%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffBroadcast"
        },
        {
            "patterns": [
                "(cancel|ignore) [the] [current] [command] cooldown",
                "un(cancel|ignore) [the] [current] [command] cooldown"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffCancelCooldown"
        },
        {
            "patterns": [
                "(cancel|clear|delete) [the] (1¦item|2¦[e]xp[erience]) drops",
                "(cancel|clear|delete) [the] drops [of (1¦items|2¦[e]xp[erience][s])]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffCancelDrops"
        },
        {
            "patterns": [
                "cancel [the] event",
                "uncancel [the] event"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffCancelEvent"
        },
        {
            "patterns": [
                "(add|give) %objects% to %~objects%",
                "(delete|clear) %~objects%",
                "(remove|subtract) %objects% from %~objects%",
                "give %~objects% %objects%",
                "increase %~objects% by %objects%",
                "reduce %~objects% by %objects%",
                "remove (all|every) %objects% from %~objects%",
                "reset %~objects%",
                "set %~objects% to %objects%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffChange"
        },
        {
            "patterns": [
                "(dye|colo[u]r|paint) %itemtypes% %color%",
                "(dye|colo[u]r|paint) %itemtypes% \\(%number%, %number%, %number%\\)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffColorItems"
        },
        {
            "patterns": [
                "(let|make) %commandsenders% execute [[the] command] %strings%",
                "[execute] [the] %commandsenders% command %strings%",
                "[execute] [the] command %strings% [by %-commandsenders%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffCommand"
        },
        {
            "patterns": [
                "connect %players% to [server] %string%",
                "send %players% to server %string%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffConnect"
        },
        {
            "patterns": [
                "continue [loop]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffContinue"
        },
        {
            "patterns": [
                "<.+> if <.+>"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffDoIf"
        },
        {
            "patterns": [
                "drop %itemtypes/experiences% [%directions% %locations%]",
                "drop %itemtypes/experiences% [%directions% %locations%] without velocity"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffDrop"
        },
        {
            "patterns": [
                "disenchant %~itemtypes%",
                "enchant %~itemtypes% with %enchantmenttypes%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffEnchant"
        },
        {
            "patterns": [
                "equip [%livingentity%] with %itemtypes%",
                "make %livingentity% wear %itemtypes%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffEquip"
        },
        {
            "patterns": [
                "cause exception"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffExceptionDebug"
        },
        {
            "patterns": [
                "(exit|stop) <\\d+> (0¦section|1¦loop|2¦conditional)s",
                "(exit|stop) [(1|a|the|this)] (0¦section|1¦loop|2¦conditional)",
                "(exit|stop) [trigger]",
                "(exit|stop) all (0¦section|1¦loop|2¦conditional)s"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffExit"
        },
        {
            "patterns": [
                "[(create|make)] [a] fake explosion [%directions% %locations%]",
                "[(create|make)] [a] safe explosion (of|with) (force|strength|power) %number% [%directions% %locations%]",
                "[(create|make)] [an] explosion (of|with) (force|strength|power) %number% [%directions% %locations%]",
                "[(create|make)] [an] explosion[ ]effect [%directions% %locations%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffExplosion"
        },
        {
            "patterns": [
                "feed [the] %players% [by %-number% [beef[s]]]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffFeed"
        },
        {
            "patterns": [
                "(launch|deploy) [[a] firework [with effect[s]]] %fireworkeffects% at %locations% [([with] (duration|power)|timed) %number%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffFireworkLaunch"
        },
        {
            "patterns": [
                "damage %livingentities/itemtypes% by %number% [heart[s]][ with fake cause %-damagecause%]",
                "heal %livingentities% [by %-number% [heart[s]]]",
                "repair %itemtypes% [by %-number%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffHealth"
        },
        {
            "patterns": [
                "hide %players% (in|on|from) [the] server list",
                "hide %players%'[s] info[rmation] (in|on|from) [the] server list"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffHidePlayerFromServerList"
        },
        {
            "patterns": [
                "(ignite|set fire to) %entities% [for %-timespan%]",
                "(set|light) %entities% on fire [for %-timespan%]",
                "extinguish %entities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffIgnite"
        },
        {
            "patterns": [
                "make %entities% (not invulnerable|vulnerable)",
                "make %entities% invulnerable"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffInvulnerability"
        },
        {
            "patterns": [
                "keep [the] (inventory|items) [(1¦and [e]xp[erience][s] [point[s]])]",
                "keep [the] [e]xp[erience][s] [point[s]] [(1¦and (inventory|items))]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffKeepInventory"
        },
        {
            "patterns": [
                "kick %players% [(by reason of|because [of]|on account of|due to) %-string%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffKick"
        },
        {
            "patterns": [
                "kill %entities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffKill"
        },
        {
            "patterns": [
                "(leash|lead) %livingentities% to %entity%",
                "make %entity% (leash|lead) %livingentities%",
                "un(leash|lead) [holder of] %livingentities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffLeash"
        },
        {
            "patterns": [
                "(create|strike) lightning(1¦[ ]effect|) %directions% %locations%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffLightning"
        },
        {
            "patterns": [
                "load [the] server icon (from|of) [the] [image] [file] %string%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffLoadServerIcon"
        },
        {
            "patterns": [
                "log %strings% [(to|in) [file[s]] %-strings%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffLog"
        },
        {
            "patterns": [
                "force %players% to [(start|1¦stop)] fly[ing]",
                "make %players% (start|1¦stop) flying",
                "make %players% fly"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffMakeFly"
        },
        {
            "patterns": [
                "force %players% to (say|send [the] message[s]) %strings%",
                "make %players% (say|send [the] message[s]) %strings%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffMakeSay"
        },
        {
            "patterns": [
                "(message|send [message[s]]) %strings% [to %commandsenders%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffMessage"
        },
        {
            "patterns": [
                "[de[-]]op %offlineplayers%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffOp"
        },
        {
            "patterns": [
                "(0¦open|1¦show) ((2¦(crafting [table]|workbench)|3¦chest|4¦anvil|5¦hopper|6¦dropper|7¦dispenser) (view|window|inventory|)|%-inventory%) (to|for) %players%",
                "close %players%'[s] inventory [view]",
                "close [the] inventory [view] (to|of|for) %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffOpenInventory"
        },
        {
            "patterns": [
                "(show|reveal) [all] player [related] info[rmation] [(in|to|on|from) [the] server list]",
                "hide [all] player [related] info[rmation] [(in|on|from) [the] server list]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffPlayerInfoVisibility"
        },
        {
            "patterns": [
                "hide %players% [(from|for) %-players%]",
                "reveal %players% [(to|for|from) %-players%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffPlayerVisibility"
        },
        {
            "patterns": [
                "play sound[s] %strings% [(in|from) %-soundcategory%] [(at|with) volume %-number%] [(and|at|with) pitch %-number%] [(to|for) %players%] [(at|from) %-locations%]",
                "play sound[s] %strings% [(in|from) %-soundcategory%] [(at|with) volume %-number%] [(and|at|with) pitch %-number%] at %locations% [for %-players%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffPlaySound"
        },
        {
            "patterns": [
                "(cure|unpoison) %livingentities% [(from|of) poison]",
                "poison %livingentities% [for %-timespan%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffPoison"
        },
        {
            "patterns": [
                "apply [potion of] %potioneffecttypes% [potion] [[[of] tier] %-number%] to %livingentities% [for %-timespan%]",
                "apply [potion of] %potioneffecttypes% [potion] [[[of] tier] %-number%] without [any] particles to %livingentities% [for %-timespan%]",
                "apply ambient [potion of] %potioneffecttypes% [potion] [[[of] tier] %-number%] to %livingentities% [for %-timespan%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffPotion"
        },
        {
            "patterns": [
                "(push|thrust) %entities% %direction% [(at|with) (speed|velocity|force) %-number%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffPush"
        },
        {
            "patterns": [
                "disable PVP [in %worlds%]",
                "enable PvP [in %worlds%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffPvP"
        },
        {
            "patterns": [
                "replace (all|every|) %itemtypes% in %inventories% with %itemtype%",
                "replace (all|every|) %itemtypes% with %itemtype% in %inventories%",
                "replace (all|every|) %strings% in %strings% with %string% [(1¦with case sensitivity)]",
                "replace (all|every|) %strings% with %string% in %strings% [(1¦with case sensitivity)]",
                "replace first %strings% in %strings% with %string% [(1¦with case sensitivity)]",
                "replace first %strings% with %string% in %string% [(1¦with case sensitivity)]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffReplace"
        },
        {
            "patterns": [
                "reset [the] %players%'[s] title[s]",
                "reset [the] title[s] [of %players%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffResetTitle"
        },
        {
            "patterns": [
                "force %players% to respawn"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffRespawn"
        },
        {
            "patterns": [
                "return %objects%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffReturn"
        },
        {
            "patterns": [
                "(1¦enable|1¦load|2¦reload|3¦disable|3¦unload) s(c|k)ript [file] %string%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffScriptFile"
        },
        {
            "patterns": [
                "make %players% see %blocks% as %itemtype%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffSendBlockChange"
        },
        {
            "patterns": [
                "send [the] resource pack [from [[the] URL]] %string% to %players%",
                "send [the] resource pack [from [[the] URL]] %string% with hash %string% to %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffSendResourcePack"
        },
        {
            "patterns": [
                "send subtitle %string% [to %players%] [for %-timespan%] [with fade[(-| )]in %-timespan%] [(and|with) fade[(-| )]out %-timespan%]",
                "send title %string% [with subtitle %-string%] [to %players%] [for %-timespan%] [with fade[(-| )]in %-timespan%] [(and|with) fade[(-| )]out %-timespan%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffSendTitle"
        },
        {
            "patterns": [
                "shear %livingentities%",
                "un[-]shear %livingentities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffShear"
        },
        {
            "patterns": [
                "(make|let) %livingentities/locations% shoot %entitydatas% [(at|with) (speed|velocity) %-number%] [%-direction%]",
                "shoot %entitydatas% [from %livingentities/locations%] [(at|with) (speed|velocity) %-number%] [%-direction%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffShoot"
        },
        {
            "patterns": [
                "make %entities% not silent",
                "make %entities% silent",
                "silence %entities%",
                "unsilence %entities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffSilence"
        },
        {
            "patterns": [
                "(spawn|summon) %entitytypes% [%directions% %locations%]",
                "(spawn|summon) %number% of %entitytypes% [%directions% %locations%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffSpawn"
        },
        {
            "patterns": [
                "stop playing sound[s] %strings% [(in|from) %-soundcategory%] [(to|for) %players%]",
                "stop sound[s] %strings% [(in|from) %-soundcategory%] [(from playing to|for) %players%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffStopSound"
        },
        {
            "patterns": [
                "[local[ly]] suppress [the] (1¦conflict|2¦variable save|3¦[missing] conjunction[s]|4¦starting [with] expression[s]) warning[s]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffSuppressWarnings"
        },
        {
            "patterns": [
                "teleport %entities% (to|%direction%) %location%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffTeleport"
        },
        {
            "patterns": [
                "(close|turn off|de[-]activate) %blocks%",
                "(open|turn on|activate) %blocks%",
                "(toggle|switch) [[the] state of] %blocks%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffToggle"
        },
        {
            "patterns": [
                "(allow|enable) (fly|flight) (for|to) %players%",
                "(disallow|disable) (fly|flight) (for|to) %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffToggleFlight"
        },
        {
            "patterns": [
                "(grow|create|generate) %structuretype% [tree] %directions% %locations%",
                "(grow|create|generate) tree [of type %structuretype%] %directions% %locations%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffTree"
        },
        {
            "patterns": [
                "rotate %vectors% around %vector% by %number% [degrees]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffVectorRotateAroundAnother"
        },
        {
            "patterns": [
                "rotate %vectors% around (1¦x|2¦y|3¦z)(-| )axis by %number% [degrees]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffVectorRotateXYZ"
        },
        {
            "patterns": [
                "(eject|dismount) (any|the|) passenger[s] (of|from) %entities%",
                "(make|let|force) %entities% [to] (dismount|(dismount|leave) (from|of|) (any|the[ir]|his|her|) vehicle[s])",
                "(make|let|force) %entities% [to] (ride|mount) [(in|on)] %entities/entitydatas%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffVehicle"
        },
        {
            "patterns": [
                "(play|show) %number% %visualeffects% (on|%directions%) %locations% [(to %-players%|in (radius|range) of %number%)]",
                "(play|show) %visualeffects% (on|%directions%) %entities/locations% [(to %-players%|in (radius|range) of %number%)]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.EffVisualEffect"
        },
        {
            "patterns": [
                "use[s] (1¦old|2¦new|1¦2.1.2|2¦2.2) loops"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.effects.mirre.EffScriptOptionLoops"
        }
    ],
    "expressions": [
        {
            "patterns": [
                "all groups"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.hooks.permission.expressions.ExprAllGroups",
            "returnType": "java.lang.String",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] (console|server)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.LitConsole",
            "returnType": "org.bukkit.command.ConsoleCommandSender",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "at"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.LitAt",
            "returnType": "ch.njol.skript.util.Direction",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[(all [[of] the]|the)] worlds"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprWorlds",
            "returnType": "org.bukkit.World",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] [(shown|custom)] version [(string|text)]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVersionString",
            "returnType": "java.lang.String",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "(0¦[craft]bukkit|1¦minecraft|2¦skript)( |-)version"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVersion",
            "returnType": "java.lang.String",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[new] spherical vector [(from|with)] [radius] %number%, [yaw] %number%(,| and) [pitch] %number%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVectorSpherical",
            "returnType": "org.bukkit.util.Vector",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[a] random vector"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVectorRandom",
            "returnType": "org.bukkit.util.Vector",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "%location%'s vector",
                "[the] vector (of|from|to) %location%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVectorOfLocation",
            "returnType": "org.bukkit.util.Vector",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "%vector% normalized",
                "normalize[d] %vector%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVectorNormalize",
            "returnType": "org.bukkit.util.Vector",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[a] [new] vector (from|with) yaw %number% and pitch %number%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVectorFromYawAndPitch",
            "returnType": "org.bukkit.util.Vector",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[a] [new] vector [(from|at|to)] %number%,[ ]%number%(,[ ]| and )%number%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVectorFromXYZ",
            "returnType": "org.bukkit.util.Vector",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "%vector% dot %vector%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVectorDotProduct",
            "returnType": "java.lang.Number",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[a] [new] cylindrical vector [(from|with)] [radius] %number%, [yaw] %number%(,| and) [height] %number%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVectorCylindrical",
            "returnType": "org.bukkit.util.Vector",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "%vector% cross %vector%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVectorCrossProduct",
            "returnType": "org.bukkit.util.Vector",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] vector (from|between) %location% (to|and) %location%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVectorBetweenLocations",
            "returnType": "org.bukkit.util.Vector",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "%vector%[ ]**[ ]%vector%",
                "%vector%[ ]++[ ]%vector%",
                "%vector%[ ]--[ ]%vector%",
                "%vector%[ ]//[ ]%vector%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVectorArithmetic",
            "returnType": "org.bukkit.util.Vector",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] angle between [[the] vectors] %vector% and %vector%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVectorAngleBetween",
            "returnType": "java.lang.Number",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] tps",
                "tps from [the] last ([1] minute|1[ ]m[inute])",
                "tps from [the] last 15[ ]m[inutes]",
                "tps from [the] last 5[ ]m[inutes]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprTPS",
            "returnType": "java.lang.Double",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "%number% time[s]",
                "once",
                "twice"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprTimes",
            "returnType": "java.lang.Number",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] teleport (cause|reason|type)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprTeleportCause",
            "returnType": "org.bukkit.event.player.PlayerTeleportEvent$TeleportCause",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] tamer"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprTamer",
            "returnType": "org.bukkit.entity.Player",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "%strings% in (0¦upper|1¦lower)[ ]case",
                "%strings% in [(0¦lenient|1¦strict) ](proper|title)[ ]case",
                "%strings% in [(0¦lenient|1¦strict) ]camel[ ]case",
                "%strings% in [(0¦lenient|1¦strict) ]pascal[ ]case",
                "%strings% in [(1¦lower|2¦upper|3¦capital)[ ]]kebab[ ]case",
                "%strings% in [(1¦lower|2¦upper|3¦capital|4¦screaming)[ ]]snake[ ]case",
                "(0¦upper|1¦lower)[ ]case %strings%",
                "[(0¦lenient|1¦strict) ](proper|title)[ ]case %strings%",
                "[(0¦lenient|1¦strict) ]camel[ ]case %strings%",
                "[(0¦lenient|1¦strict) ]pascal[ ]case %strings%",
                "[(1¦lower|2¦upper|3¦capital)[ ]]kebab[ ]case %strings%",
                "[(1¦lower|2¦upper|3¦capital|4¦screaming)[ ]]snake[ ]case %strings%",
                "capitali(s|z)ed %strings%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprStringCase",
            "returnType": "java.lang.String",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "(0¦NaN|1¦[(2¦-|2¦minus)](infinity|∞)) value",
                "value of (0¦NaN|1¦[(2¦-|2¦minus)](infinity|∞))"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprSpecialNumber",
            "returnType": "java.lang.Number",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] spawn[ing] reason"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprSpawnReason",
            "returnType": "org.bukkit.event.entity.CreatureSpawnEvent$SpawnReason",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] shooter [of %projectile%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprShooter",
            "returnType": "org.bukkit.entity.LivingEntity",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] script[['s] name]",
                "name of [the] script"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprScript",
            "returnType": "java.lang.String",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] respawn location"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprRespawnLocation",
            "returnType": "org.bukkit.Location",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "(raw|minecraft|vanilla) name[s] of %itemtypes%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprRawName",
            "returnType": "java.lang.String",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] moved blocks"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprPushedBlocks",
            "returnType": "org.bukkit.block.Block",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] [(sent|required|fake)] protocol version [number]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprProtocolVersion",
            "returnType": "java.lang.Number",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] blocks of [the] portal",
                "[the] portal['s] blocks"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprPortal",
            "returnType": "org.bukkit.block.Block",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] [last] [parse] error"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprParseError",
            "returnType": "java.lang.String",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[(all [[of] the]|the)] offline[ ]players"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprOfflinePlayers",
            "returnType": "org.bukkit.OfflinePlayer",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "number of digit char(acters|s) in %string%",
                "number of lower[ ]case char(acters|s) in %string%",
                "number of upper[ ]case char(acters|s) in %string%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprNumberOfCharacters",
            "returnType": "java.lang.Number",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "now"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprNow",
            "returnType": "ch.njol.skript.util.Date",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] [(1¦default)|(2¦shown|displayed)] (MOTD|message of [the] day)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprMOTD",
            "returnType": "java.lang.String",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] (join|log[ ]in)( |-)message",
                "[the] (quit|leave|log[ ]out|kick)( |-)message",
                "[the] [chat( |-)]message",
                "[the] death( |-)message"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprMessage",
            "returnType": "java.lang.String",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "me",
                "my[self]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprMe",
            "returnType": "org.bukkit.command.CommandSender",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] loop-<.+>"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLoopValue",
            "returnType": "java.lang.Object",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "%location% offset by [[the] vectors] %vectors%",
                "%location%[ ]~[~][ ]%vectors%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLocationVectorOffset",
            "returnType": "org.bukkit.Location",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] [event-](location|position)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLocation",
            "returnType": "org.bukkit.Location",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] [last[ly]] (0¦spawned|1¦shot) %*entitydata%",
                "[the] [last[ly]] dropped (2¦item)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLastSpawnedEntity",
            "returnType": "org.bukkit.entity.Entity",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] [last[ly]] loaded server icon"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLastLoadedServerIcon",
            "returnType": "org.bukkit.util.CachedServerIcon",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] item"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprItem",
            "returnType": "org.bukkit.inventory.ItemStack",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] inventory action"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprInventoryAction",
            "returnType": "org.bukkit.event.inventory.InventoryAction",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] [custom] [(player|server)] (hover|sample) ([message] list|message)",
                "[the] [custom] player [(hover|sample)] list"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprHoverList",
            "returnType": "java.lang.String",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] hotbar button"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprHotbarButton",
            "returnType": "java.lang.Number",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "%strings% hash[ed] with (0¦MD5|1¦SHA-256)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprHash",
            "returnType": "java.lang.String",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] final damage"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprFinalDamage",
            "returnType": "java.lang.Double",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] (spawned|dropped|) [e]xp[erience] [orb[s]]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprExperience",
            "returnType": "ch.njol.skript.util.Experience",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[is] event cancelled"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprEventCancelled",
            "returnType": "java.lang.Boolean",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] drops"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprDrops",
            "returnType": "ch.njol.skript.aliases.ItemType",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] damage"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprDamage",
            "returnType": "java.lang.Double",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] [command['s]] (sender|executor)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprCommandSender",
            "returnType": "org.bukkit.command.CommandSender",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] (full|complete|whole) command",
                "[the] arguments",
                "[the] command [label]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprCommand",
            "returnType": "java.lang.String",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] ((cooldown|wait) time|[wait] time of [the] (cooldown|wait) [(of|for) [the] [current] command])",
                "[the] [cooldown] bypass perm[ission] [of [the] (cooldown|wait) [(of|for) [the] [current] command]]",
                "[the] elapsed [time] [of [the] (cooldown|wait) [(of|for) [the] [current] command]]",
                "[the] last usage [date] [of [the] (cooldown|wait) [(of|for) [the] [current] command]]",
                "[the] remaining [time] [of [the] (cooldown|wait) [(of|for) [the] [current] command]]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprCmdCooldownInfo",
            "returnType": "java.lang.Object",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] (1¦clicked (block|%-*itemtype/entitydata%)|2¦clicked slot|3¦clicked inventory|4¦click (type|action)|5¦inventory action)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprClicked",
            "returnType": "java.lang.Object",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[chat][( |-)]recipients"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprChatRecipients",
            "returnType": "org.bukkit.entity.Player",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] (message|chat) format[ting]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprChatFormat",
            "returnType": "java.lang.String",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] [event-]block"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprBlock",
            "returnType": "org.bukkit.block.Block",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] (attacker|damager)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprAttacker",
            "returnType": "org.bukkit.entity.Entity",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] (attacked|damaged|victim) [<(.+)>]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprAttacked",
            "returnType": "org.bukkit.entity.Entity",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] %*classinfo%( |-)arg[ument][( |-)<\\d+>]",
                "[the] <(\\d*1)st|(\\d*2)nd|(\\d*3)rd|(\\d*[4-90])th> arg[ument][s]",
                "[the] arg[ument]( |-)%*classinfo%[( |-)<\\d+>]",
                "[the] arg[ument][s]",
                "[the] arg[ument][s](-| )<(\\d+)>",
                "[the] last arg[ument][s]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprArgument",
            "returnType": "java.lang.Object",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] affected entities"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprAffectedEntities",
            "returnType": "org.bukkit.entity.LivingEntity",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] absorbed blocks"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprAbsorbedBlocks",
            "returnType": "ch.njol.skript.util.BlockStateBlock",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "[the] damage (cause|type)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprDamageCause",
            "returnType": "org.bukkit.event.entity.EntityDamageEvent$DamageCause",
            "expressionType": "SIMPLE"
        },
        {
            "patterns": [
                "%objects% if <.+>[,] (otherwise|else) %objects%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprTernary",
            "returnType": "java.lang.Object",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "%players%'[s] actual[ly] target[ed] block[s]",
                "%players%'[s] target[ed] block[s]",
                "[the] actual[ly] target[ed] block[s] [of %players%]",
                "[the] target[ed] block[s] [of %players%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprTargetedBlock",
            "returnType": "org.bukkit.block.Block",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "[the] %number% (1¦first|2¦last) characters of %strings%",
                "[the] (1¦first|2¦last) [%-number%] character[s] of %strings%",
                "[the] (part|sub[ ](text|string)) of %strings% (between|from) (ind(ex|ices)|character[s]|) %number% (and|to) (index|character|) %number%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprSubstring",
            "returnType": "java.lang.String",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "sorted %objects%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprSortedList",
            "returnType": "java.lang.Object",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "shuffled %objects%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprShuffledList",
            "returnType": "java.lang.Object",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "reversed %objects%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprReversedList",
            "returnType": "java.lang.Object",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "[a] random (1¦integer|2¦number) (from|between) %number% (to|and) %number%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprRandomNumber",
            "returnType": "java.lang.Number",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "[a] random %*classinfo% [out] of %objects%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprRandom",
            "returnType": "java.lang.Object",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "%string% parsed as (%-*classinfo%|\"<.*>\")"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprParse",
            "returnType": "java.lang.Object",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "[(all [[of] the]|the)] (numbers|1¦integers) (between|from) %number% (and|to) %number%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprNumbers",
            "returnType": "java.lang.Number",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "[the] (location|position) [at] [\\(][x[ ][=[ ]]]%number%, [y[ ][=[ ]]]%number%, [and] [z[ ][=[ ]]]%number%[\\)] [[(in|of) [[the] world]] %world%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLocationAt",
            "returnType": "org.bukkit.Location",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "[the] (location|position) %directions% [%location%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLocation",
            "returnType": "org.bukkit.Location",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "%string% split (at|using|by) [[the] delimiter] %string%",
                "(concat[enate]|join) %strings% [(with|using|by) [[the] delimiter] %-string%]",
                "split %string% (at|using|by) [[the] delimiter] %string%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprJoinSplit",
            "returnType": "java.lang.String",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "[(all [[of] the]|the)] blocks of type[s] %itemtypes%",
                "[(all [[of] the]|the)] items of type[s] %itemtypes%",
                "[(all [[of] the]|the|every)] block(s|[ ]types)",
                "[(all [[of] the]|the|every)] item(s|[ ]types)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprItems",
            "returnType": "org.bukkit.inventory.ItemStack",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "%inventory%'[s] slot[s] %numbers%",
                "[the] slot[s] %numbers% of %inventory%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprInventorySlot",
            "returnType": "ch.njol.skript.util.slot.Slot",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "(all of the|all the|all) (indices|indexes) of %objects%",
                "[the] (indexes|indices) of %objects%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprIndices",
            "returnType": "java.lang.String",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "[the] (0¦|0¦first|1¦last) index of %string% in %string%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprIndexOf",
            "returnType": "java.lang.Integer",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "(1¦|2¦flickering|3¦trailing|4¦flickering trailing|5¦trailing flickering) %fireworktype% [firework [effect]] colo[u]red %colors%",
                "(1¦|2¦flickering|3¦trailing|4¦flickering trailing|5¦trailing flickering) %fireworktype% [firework [effect]] colo[u]red %colors% fad(e|ing) [to] %colors%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprFireworkEffect",
            "returnType": "org.bukkit.FireworkEffect",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "%objects% (where|that match) \\[<.+>\\]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprFilter",
            "returnType": "java.lang.Object",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "%*classinfo% input",
                "input"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprFilter$ExprInput",
            "returnType": "java.lang.Object",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "[the] exploded blocks"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprExplodedBlocks",
            "returnType": "org.bukkit.block.Block",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "[the] distance between %location% and %location%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprDistance",
            "returnType": "java.lang.Double",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "[%-number% [(block|met(er|re))[s]] [to the]] (2¦north[(-| |)(4¦east|5¦west)][(ward(s|ly|)|er(n|ly|))] [of]|3¦south[(-| |)(11¦east|10¦west)][(ward(s|ly|)|er(n|ly|))] [of]|(4¦east|5¦west)[(ward(s|ly|)|er(n|ly|))] [of]|0¦above|0¦over|(0¦up|1¦down)[ward(s|ly|)]|1¦below|1¦under[neath]|1¦beneath) [%-direction%]",
                "[%-number% [(block|met(er|re))[s]]] (0¦in[ ]front [of]|0¦forward[s]|2¦behind|2¦backwards|[to the] (1¦right|-1¦left) [of])",
                "[%-number% [(block|met(er|re))[s]]] horizontal[ly] (0¦in[ ]front [of]|0¦forward[s]|2¦behind|2¦backwards|to the (1¦right|-1¦left) [of])",
                "[%-number% [(block|met(er|re))[s]]] in %entity/block%'[s] (0¦direction|1¦horizontal direction|2¦facing|3¦horizontal facing) (of|from|)",
                "[%-number% [(block|met(er|re))[s]]] in [the] (0¦direction|1¦horizontal direction|2¦facing|3¦horizontal facing) of %entity/block% (of|from|)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprDirection",
            "returnType": "ch.njol.skript.util.Direction",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "difference (between|of) %object% and %object%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprDifference",
            "returnType": "java.lang.Object",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "%objects% (otherwise|?) %objects%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprDefaultValue",
            "returnType": "java.lang.Object",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "%timespan% (ago|in the past|before [the] [date] %-date%)",
                "%timespan% (later|(from|after) [the] [date] %-date%)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprDateAgoLater",
            "returnType": "ch.njol.skript.util.Date",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "%itemtype% damaged by %number%",
                "%itemtype% with (damage|data) [value] %number%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprDamagedItem",
            "returnType": "ch.njol.skript.aliases.ItemType",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "(colo[u]r-|colo[u]red )%strings%",
                "(format-|formatted )%strings%",
                "(un|non)[-](colo[u]r-|colo[u]red |format-|formatted )%strings%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprColoured",
            "returnType": "java.lang.String",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "[a [new]] chest inventory (named|with name) %string% [with %-number% row[s]]",
                "[a [new]] chest inventory with %number% row[s] [(named|with name) %-string%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprChestInventory",
            "returnType": "org.bukkit.inventory.Inventory",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "[(all [[of] the]|the)] blocks around %location% in radius %number%",
                "[(all [[of] the]|the)] blocks in radius %number% [(of|around) %location%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprBlockSphere",
            "returnType": "org.bukkit.block.Block",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "[(all [[of] the]|the)] blocks %direction% [%locations%]",
                "[(all [[of] the]|the)] blocks (within|between) %block% and %block%",
                "[(all [[of] the]|the)] blocks from %block% to %block%",
                "[(all [[of] the]|the)] blocks from %location% [on] %direction%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprBlocks",
            "returnType": "org.bukkit.block.Block",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "[the] block %direction% [%location%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprBlock",
            "returnType": "org.bukkit.block.Block",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "alphabetically sorted %strings%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprAlphabetList",
            "returnType": "java.lang.String",
            "expressionType": "COMBINED"
        },
        {
            "patterns": [
                "%offlineplayers%'[s] group[(1¦s)]",
                "[the] group[(1¦s)] of %offlineplayers%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.hooks.permission.expressions.ExprGroup",
            "returnType": "java.lang.String",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] (money|balance|[bank] account)",
                "[the] (money|balance|[bank] account) of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.hooks.economy.expressions.ExprBalance",
            "returnType": "ch.njol.skript.hooks.economy.classes.Money",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%locations%'[s] (0¦yaw|1¦pitch)",
                "[the] (0¦yaw|1¦pitch) of %locations%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprYawPitch",
            "returnType": "java.lang.Number",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%locations/entities%'[s] world",
                "[the] world [of %locations/entities%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprWorld",
            "returnType": "org.bukkit.World",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%worlds%'[s] weather",
                "[the] weather [(in|of) %worlds%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprWeather",
            "returnType": "ch.njol.skript.util.WeatherType",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%entities%'[s] velocit(y|ies)",
                "[the] velocit(y|ies) of %entities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVelocity",
            "returnType": "org.bukkit.util.Vector",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%entities%'[s] vehicle[s]",
                "[the] vehicle[s] of %entities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVehicle",
            "returnType": "org.bukkit.entity.Entity",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%vectors%'[s] [vector] (0¦yaw|1¦pitch)",
                "[the] [vector] (0¦yaw|1¦pitch) of %vectors%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVectorYawPitch",
            "returnType": "java.lang.Number",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%vectors%'[s] [vector] (0¦x|1¦y|2¦z) [component[s]]",
                "[the] [vector] (0¦x|1¦y|2¦z) [component[s]] of %vectors%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVectorXYZ",
            "returnType": "java.lang.Number",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%vectors%'[s] squared length[s]",
                "[the] squared length[s] of %vectors%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVectorSquaredLength",
            "returnType": "java.lang.Number",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%vectors%'[s] (vector|standard|normal) length[s]",
                "[the] (vector|standard|normal) length[s] of %vectors%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprVectorLength",
            "returnType": "java.lang.Number",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%offlineplayers/worlds/entities%'[s] UUID",
                "[the] UUID of %offlineplayers/worlds/entities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprUUID",
            "returnType": "java.lang.String",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%dates%'[s] unix timestamp",
                "[the] unix timestamp of %dates%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprUnixTicks",
            "returnType": "java.lang.Number",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%numbers%'[s] unix date",
                "[the] unix date of %numbers%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprUnixDate",
            "returnType": "ch.njol.skript.util.Date",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "unbreakable %itemtypes%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprUnbreakable",
            "returnType": "ch.njol.skript.aliases.ItemType",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%entitydatas/itemtypes/inventories%'[s] type",
                "[the] type of %entitydatas/itemtypes/inventories%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprTypeOf",
            "returnType": "java.lang.Object",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%~object% before [the event]",
                "%~object%(-to-be| after[(wards| the event)])",
                "[the] (former|past|old) [state] [of] %~object%",
                "[the] (future|to-be|new) [state] [of] %~object%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprTimeState",
            "returnType": "java.lang.Object",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] time played",
                "[the] time played of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprTimePlayed",
            "returnType": "ch.njol.skript.util.Timespan",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%worlds%'[s] time[s]",
                "[the] time[s] [([with]in|of) %worlds%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprTime",
            "returnType": "ch.njol.skript.util.Time",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%blocks%'[s] temperature[s]",
                "[the] temperature[s] of %blocks%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprTemperature",
            "returnType": "java.lang.Double",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%livingentities%'[s] target[[ed] %-*entitydata%]",
                "[the] target[[ed] %-*entitydata%] [of %livingentities%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprTarget",
            "returnType": "org.bukkit.entity.Entity",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] (0¦walk[ing]|1¦fl(y[ing]|ight))[( |-])speed",
                "[the] (0¦walk[ing]|1¦fl(y[ing]|ight))[( |-])speed of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprSpeed",
            "returnType": "java.lang.Float",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] spectator target",
                "[the] spectator target of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprSpectatorTarget",
            "returnType": "org.bukkit.entity.Entity",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%blocks%'[s] (entity|creature) type[s]",
                "[the] (entity|creature) type[s] of %blocks%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprSpawnerType",
            "returnType": "ch.njol.skript.entity.EntityData",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%worlds%'[s] spawn[s] [(point|location)[s]]",
                "[the] spawn[s] [(point|location)[s]] [of %worlds%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprSpawn",
            "returnType": "org.bukkit.Location",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%slots%'[s] (index|indices)",
                "[the] (index|indices) of %slots%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprSlotIndex",
            "returnType": "java.lang.Integer",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%offlineplayers%'[s] (head|skull)",
                "[the] (head|skull) of %offlineplayers%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprSkull",
            "returnType": "ch.njol.skript.aliases.ItemType",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "[the] (1¦1st|1¦first|2¦2nd|2¦second|3¦3rd|3¦third|4¦4th|4¦fourth) line [of %block%]",
                "[the] line %number% [of %block%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprSignText",
            "returnType": "java.lang.String",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "[the] [(1¦(default)|2¦(shown|sent))] [server] icon"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprServerIcon",
            "returnType": "org.bukkit.util.CachedServerIcon",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%worlds%'[s] seed[s]",
                "[the] seed[s] (from|of) %worlds%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprSeed",
            "returnType": "java.lang.Long",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%entities%'[s] scoreboard tags",
                "[(all [[of] the]|the)] scoreboard tags of %entities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprScoreboardTags",
            "returnType": "java.lang.String",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] saturation",
                "[the] saturation [of %players%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprSaturation",
            "returnType": "java.lang.Number",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "(a|the|) round[ed] %number%",
                "(a|the|) round[ed] down %number%",
                "(a|the|) round[ed] up %number%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprRound",
            "returnType": "java.lang.Long",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%livingentities%'[s] remaining air",
                "[the] remaining air of %livingentities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprRemainingAir",
            "returnType": "ch.njol.skript.util.Timespan",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] [(client|custom)] weather",
                "[the] [(client|custom)] weather of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprPlayerWeather",
            "returnType": "ch.njol.skript.util.WeatherType",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] (player|tab)[ ]list (header|1¦footer) [(text|message)]",
                "[the] (player|tab)[ ]list (header|1¦footer) [(text|message)] of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprPlayerlistHeaderFooter",
            "returnType": "java.lang.String",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] ping",
                "[the] ping of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprPing",
            "returnType": "java.lang.Number",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "[(all [[of] the]|the)] %players%'[s] permissions",
                "[(all [[of] the]|the)] permissions (from|of) %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprPermissions",
            "returnType": "java.lang.String",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%entities%'[s] passenger[s]",
                "[the] passenger[s] of %entities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprPassenger",
            "returnType": "org.bukkit.entity.Entity",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] (current|open|top) inventory",
                "[the] (current|open|top) inventory [of %players%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprOpenedInventory",
            "returnType": "org.bukkit.inventory.Inventory",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "[the] [(1¦(real|default)|2¦(fake|shown|displayed))] (count|amount|number|size) of online players",
                "[the] [(1¦(real|default)|2¦(fake|shown|displayed))] [online] player (count|amount|number)"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprOnlinePlayersCount",
            "returnType": "java.lang.Number",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%livingentities%'[s] (off[ ]hand tool|off[ ] hand item|shield[ item])",
                "%livingentities%'[s] (off[(-| )]tool|off[(-| )][held ]item|off[(-| )]weapon)",
                "[the] (off[ ]hand tool|off[ ] hand item|shield[ item]) [of %livingentities%]",
                "[the] (off[(-| )]tool|off[(-| )][held ]item|off[(-| )]weapon) [of %livingentities%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprOffTool",
            "returnType": "ch.njol.skript.util.slot.Slot",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%livingentities%'[s] (tool|held item|weapon)",
                "[the] (tool|held item|weapon) [of %livingentities%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprTool",
            "returnType": "ch.njol.skript.util.slot.Slot",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemtype/inventorytype% (named|with name[s]) %string%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprNamed",
            "returnType": "java.lang.Object",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] (2¦)(player|tab)[ ]list name[s]",
                "[the] (2¦)(player|tab)[ ]list name[s] of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprName",
            "returnType": "java.lang.String",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemstacks/slots/entities/players/inventories%'[s] (1¦)(display|nick|chat)[ ]name[s]",
                "[the] (1¦)(display|nick|chat)[ ]name[s] of %itemstacks/slots/entities/players/inventories%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprName",
            "returnType": "java.lang.String",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemstacks/slots/entities/players/inventories%'[s] (0¦)name[s]",
                "[the] (0¦)name[s] of %itemstacks/slots/entities/players/inventories%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprName",
            "returnType": "java.lang.String",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%metadataholders%'[s] metadata [(value|tag)[s]] %string%",
                "metadata [(value|tag)[s]] %strings% of %metadataholders%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprMetadata",
            "returnType": "java.lang.Object",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemtype%'[s] max[imum] stack[[ ]size]",
                "[the] max[imum] stack[[ ]size] of %itemtype%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprMaxStack",
            "returnType": "java.lang.Integer",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "[the] [(1¦(real|default)|2¦(fake|shown|displayed))] max[imum] (count|amount|number|size) of players",
                "[the] [(1¦(real|default)|2¦(fake|shown|displayed))] max[imum] player[s] [(count|amount|number|size)]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprMaxPlayers",
            "returnType": "java.lang.Number",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%livingentities%'[s] max[imum] health",
                "[the] max[imum] health of %livingentities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprMaxHealth",
            "returnType": "java.lang.Double",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemstacks/slots%'[s] max[imum] durabilit(y|ies)",
                "[the] max[imum] durabilit(y|ies) of %itemstacks/slots%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprMaxDurability",
            "returnType": "java.lang.Number",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemstack/itemtype%'[s] lore",
                "[the] %number%(st|nd|rd|th) line of %itemstack/itemtype%'[s] lore",
                "[the] %number%(st|nd|rd|th) line of [the] lore of %itemstack/itemtype%",
                "[the] line %number% of %itemstack/itemtype%'[s] lore",
                "[the] line %number% of [the] lore of %itemstack/itemtype%",
                "[the] lore of %itemstack/itemtype%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLore",
            "returnType": "java.lang.String",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%location%'[s] (location|position)",
                "(location|position) of %location%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLocationOf",
            "returnType": "org.bukkit.Location",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "[(1¦sky|1¦sun|2¦block)[ ]]light[ ]level [(of|%direction%) %location%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLightLevel",
            "returnType": "java.lang.Byte",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] level progress",
                "[the] level progress of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLevelProgress",
            "returnType": "java.lang.Float",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] level",
                "[the] level of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLevel",
            "returnType": "java.lang.Integer",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%strings%'[s] length",
                "[the] length of %strings%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLength",
            "returnType": "java.lang.Integer",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%livingentities%'[s] leash holder[s]",
                "[the] leash holder[s] of %livingentities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLeashHolder",
            "returnType": "org.bukkit.entity.Entity",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] [last] resource pack response[s]",
                "[the] [last] resource pack response[s] of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLastResourcePackResponse",
            "returnType": "org.bukkit.event.player.PlayerResourcePackStatusEvent$Status",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%livingentities%'[s] last damage (cause|reason|type)",
                "[the] last damage (cause|reason|type) of %livingentities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLastDamageCause",
            "returnType": "org.bukkit.event.entity.EntityDamageEvent$DamageCause",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] [([currently] selected|current)] [game] (language|locale) [setting]",
                "[the] [([currently] selected|current)] [game] (language|locale) [setting] of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprLanguage",
            "returnType": "java.lang.String",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemtype% with [(a|the)] lore %strings%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprItemWithLore",
            "returnType": "ch.njol.skript.aliases.ItemType",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemtype% with [custom] model data %number%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprItemWithCustomModelData",
            "returnType": "ch.njol.skript.aliases.ItemType",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "[(all [[of] the]|the)] items ([with]in|of|contained in|out of) (|1¦inventor(y|ies)) %inventories%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprItemsIn",
            "returnType": "ch.njol.skript.util.slot.Slot",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%entities%'[s] item",
                "[the] item of %entities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprItemFrameSlot",
            "returnType": "ch.njol.skript.util.slot.Slot",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemtypes%'[s] item[[ ]stack] (amount|size|number)",
                "[the] item[[ ]stack] (amount|size|number) of %itemtypes%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprItemAmount",
            "returnType": "java.lang.Number",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] IP[s][( |-)address[es]]",
                "IP[( |-)address]",
                "IP[s][( |-)address[es]] of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprIP",
            "returnType": "java.lang.String",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%inventories%'[s] (1¦holder[s]|2¦viewers|3¦[amount of] rows)",
                "[the] (1¦holder[s]|2¦viewers|3¦[amount of] rows) of %inventories%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprInventoryInfo",
            "returnType": "java.lang.Object",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%inventoryholders%'[s] inventor(y|ies)",
                "[the] inventor(y|ies) of %inventoryholders%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprInventory",
            "returnType": "java.lang.Object",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemtype%'[s] id(1¦s|)",
                "[the] id(1¦s|) of %itemtype%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprIdOf",
            "returnType": "java.lang.Integer",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%blocks%'[s] humidit(y|ies)",
                "[the] humidit(y|ies) of %blocks%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprHumidity",
            "returnType": "java.lang.Double",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] [([currently] selected|current)] hotbar slot",
                "[the] [([currently] selected|current)] hotbar slot of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprHotbarSlot",
            "returnType": "ch.njol.skript.util.slot.Slot",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "highest [(solid|non-air)] block at %locations%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprHighestSolidBlock",
            "returnType": "org.bukkit.block.Block",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "[(all [[of] the]|the)] hidden players (of|for) %players%",
                "[(all [[of] the]|the)] players hidden (from|for|by) %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprHiddenPlayers",
            "returnType": "org.bukkit.entity.Player",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%livingentities%'[s] health",
                "[the] health of %livingentities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprHealth",
            "returnType": "java.lang.Double",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%entities%'[s] gravity",
                "[the] gravity of %entities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprGravity",
            "returnType": "java.lang.Boolean",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%entities%'[s] glowing",
                "[the] glowing of %entities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprGlowing",
            "returnType": "java.lang.Boolean",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%entities%'[s] (gliding|glider) [state]",
                "[the] (gliding|glider) [state] of %entities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprGlidingState",
            "returnType": "java.lang.Boolean",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] game[ ]mode",
                "[the] game[ ]mode of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprGameMode",
            "returnType": "org.bukkit.GameMode",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%blocks%'[s] (0¦ore|1¦fuel|2¦result)[s] [slot[s]]",
                "(0¦ore|1¦fuel|2¦result)[s] [slot[s]] of %blocks%",
                "(1¦fuel|2¦result) [slot]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprFurnaceSlot",
            "returnType": "ch.njol.skript.util.slot.Slot",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%dates% formatted [human-readable] [(with|as) %-string%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprFormatTime",
            "returnType": "java.lang.String",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%player%'[s] (food|hunger)[[ ](level|met(er|re)|bar)]",
                "[the] (food|hunger)[[ ](level|met(er|re)|bar)] [of %player%]"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprFoodLevel",
            "returnType": "java.lang.Float",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] fl(y[ing]|ight) (mode|state)",
                "[the] fl(y[ing]|ight) (mode|state) of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprFlightMode",
            "returnType": "java.lang.Boolean",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%livingentities/blocks%'[s] (1¦horizontal|) facing",
                "[the] (1¦horizontal|) facing of %livingentities/blocks%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprFacing",
            "returnType": "ch.njol.skript.util.Direction",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%livingentities%'[s] (head|eye[s]) [location[s]]",
                "[the] (head|eye[s]) [location[s]] of %livingentities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprEyeLocation",
            "returnType": "org.bukkit.Location",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] exhaustion",
                "[the] exhaustion of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprExhaustion",
            "returnType": "java.lang.Number",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "[the] event-%*classinfo%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprEventExpression",
            "returnType": "java.lang.Object",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%livingentities%'[s] (owner|tamer)",
                "[the] (owner|tamer) of %livingentities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprEntityTamer",
            "returnType": "org.bukkit.OfflinePlayer",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] ender[ ]chest[s]",
                "[the] ender[ ]chest[s] of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprEnderChest",
            "returnType": "org.bukkit.inventory.Inventory",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemtypes%'[s] enchantments",
                "[the] enchantments of %itemtypes%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprEnchantments",
            "returnType": "ch.njol.skript.util.EnchantmentType",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemtypes%'[s] %enchantments% [enchant[ment]] level[s]",
                "%itemtypes%'[s] [enchant[ment]] level[s] of %enchantments%",
                "[the] %enchantments% [enchant[ment]] level[s] (on|of) %itemtypes%",
                "[the] [enchant[ment]] level[s] of %enchantments% (on|of) %itemtypes%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprEnchantmentLevel",
            "returnType": "java.lang.Integer",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "(-1¦[the] first|1¦[the] last|0¦[a] random|2¦%-number%(st|nd|rd|th)) element [out] of %objects%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprElement",
            "returnType": "java.lang.Object",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemstacks/slots%'[s] ((data|damage)[s] [value[s]]|durabilit(y|ies))",
                "[the] ((data|damage)[s] [value[s]]|durabilit(y|ies)) of %itemstacks/slots%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprDurability",
            "returnType": "java.lang.Short",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%worlds%'[s] difficult(y|ies)",
                "[the] difficult(y|ies) of %worlds%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprDifficulty",
            "returnType": "org.bukkit.Difficulty",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemtypes%'[s] [custom] model data",
                "[the] [custom] model data of %itemtypes%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprCustomModelData",
            "returnType": "java.lang.Long",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] cursor slot",
                "[the] cursor slot of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprCursorSlot",
            "returnType": "ch.njol.skript.util.slot.Slot",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%locations%'[s] (0¦x|1¦y|2¦z)(-| )(coord[inate]|pos[ition]|loc[ation])[s]",
                "[the] (0¦x|1¦y|2¦z)(-| )(coord[inate]|pos[ition]|loc[ation])[s] of %locations%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprCoordinate",
            "returnType": "java.lang.Double",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] compass target",
                "[the] compass target of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprCompassTarget",
            "returnType": "org.bukkit.Location",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%blocks/itemtypes/entities/fireworkeffects%'[s] colo[u]r[s]",
                "[the] colo[u]r[s] of %blocks/itemtypes/entities/fireworkeffects%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprColorOf",
            "returnType": "ch.njol.skript.util.Color",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] client view distance[s]",
                "[the] client view distance[s] of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprClientViewDistance",
            "returnType": "java.lang.Number",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%locations%'[s] chunk[s]",
                "[the] chunk[s] (of|%-directions%) %locations%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprChunk",
            "returnType": "org.bukkit.Chunk",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%blocks%'[s] (burn|1¦cook)[ing] time",
                "[the] (burn|1¦cook)[ing] time of %blocks%",
                "[the] burn[ing] time"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprBurnCookTime",
            "returnType": "ch.njol.skript.util.Timespan",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemtypes%'[s] book (name|title)",
                "[the] book (name|title) of %itemtypes%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprBookTitle",
            "returnType": "java.lang.String",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemtypes%'s [book] (pages|content)",
                "%itemtypes%'s [book] page %number%",
                "[all] [the] [book] (pages|content) of %itemtypes%",
                "[book] page %number% of %itemtypes%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprBookPages",
            "returnType": "java.lang.String",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%itemtypes%'[s] [book] (author|writer|publisher)",
                "[the] [book] (author|writer|publisher) of %itemtypes%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprBookAuthor",
            "returnType": "java.lang.String",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%location%'[s] biome",
                "[the] biome (of|%direction%) %location%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprBiome",
            "returnType": "org.bukkit.block.Biome",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%players%'[s] bed[s] [location[s]]",
                "[the] bed[s] [location[s]] of %players%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprBed",
            "returnType": "org.bukkit.Location",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%livingentities%'[s] (0¦boot[s]|0¦shoe[s]|1¦leg[ging][s]|2¦chestplate[s]|3¦helm[et][s]) [(0¦item|4¦slot)]",
                "[the] (0¦boot[s]|0¦shoe[s]|1¦leg[ging][s]|2¦chestplate[s]|3¦helm[et][s]) [(0¦item|4¦slot)] of %livingentities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprArmorSlot",
            "returnType": "ch.njol.skript.util.slot.Slot",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "[the] (amount|number) of %itemtypes% (in|of) %inventories%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprAmountOfItems",
            "returnType": "java.lang.Integer",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "(amount|number|size) of %objects%",
                "recursive (amount|number|size) of %objects%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprAmount",
            "returnType": "java.lang.Integer",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%locations%'[s] altitude[s]",
                "[the] altitude[s] of %locations%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprAltitude",
            "returnType": "java.lang.Double",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%livingentities%'[s] (ai|artificial intelligence)",
                "[the] (ai|artificial intelligence) of %livingentities%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprAI",
            "returnType": "java.lang.Boolean",
            "expressionType": "PROPERTY"
        },
        {
            "patterns": [
                "%number% of %itemstacks/entitytype%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprXOf",
            "returnType": "java.lang.Object",
            "expressionType": "PATTERN_MATCHES_EVERYTHING"
        },
        {
            "patterns": [
                "[the] [event-]<.+>"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprEntity",
            "returnType": "org.bukkit.entity.Entity",
            "expressionType": "PATTERN_MATCHES_EVERYTHING"
        },
        {
            "patterns": [
                "[(all [[of] the]|the)] %*entitydatas% (within|[with]in radius) %number% [(block[s]|met(er|re)[s])] (of|around) %location%",
                "[(all [[of] the]|the)] %*entitydatas% [(in|of) [world[s]] %-worlds%]",
                "[(all [[of] the]|the)] entities of type[s] %entitydatas% [(in|of) [world[s]] %-worlds%]",
                "[(all [[of] the]|the)] entities of type[s] %entitydatas% in radius %number% (of|around) %location%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprEntities",
            "returnType": "org.bukkit.entity.Entity",
            "expressionType": "PATTERN_MATCHES_EVERYTHING"
        },
        {
            "patterns": [
                "%number%[ ]*[ ]%number%",
                "%number%[ ]+[ ]%number%",
                "%number%[ ]-[ ]%number%",
                "%number%[ ]/[ ]%number%",
                "%number%[ ]^[ ]%number%"
            ],
            "addonName": "Skript",
            "className": "ch.njol.skript.expressions.ExprArithmetic",
            "returnType": "java.lang.Number",
            "expressionType": "PATTERN_MATCHES_EVERYTHING"
        }
    ]
}